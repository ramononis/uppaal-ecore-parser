/*
 * generated by Xtext 2.16.0
 */
grammar InternalUppaalSMC;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package nl.utwente.ewi.fmt.uppaalSMC.parser.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package nl.utwente.ewi.fmt.uppaalSMC.parser.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import nl.utwente.ewi.fmt.uppaalSMC.parser.services.UppaalSMCGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private UppaalSMCGrammarAccess grammarAccess;

    public InternalUppaalSMCParser(TokenStream input, UppaalSMCGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "NSTA";
   	}

   	@Override
   	protected UppaalSMCGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleNSTA
entryRuleNSTA returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNSTARule()); }
	iv_ruleNSTA=ruleNSTA
	{ $current=$iv_ruleNSTA.current; }
	EOF;

// Rule NSTA
ruleNSTA returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<?xml'
		{
			newLeafNode(otherlv_0, grammarAccess.getNSTAAccess().getXmlKeyword_0());
		}
		otherlv_1='version="1.0"'
		{
			newLeafNode(otherlv_1, grammarAccess.getNSTAAccess().getVersion10Keyword_1());
		}
		otherlv_2='encoding="utf-8"?>'
		{
			newLeafNode(otherlv_2, grammarAccess.getNSTAAccess().getEncodingUtf8Keyword_2());
		}
		otherlv_3='<!DOCTYPE'
		{
			newLeafNode(otherlv_3, grammarAccess.getNSTAAccess().getDOCTYPEKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getNSTAAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNSTARule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		this_ID_5=RULE_ID
		{
			newLeafNode(this_ID_5, grammarAccess.getNSTAAccess().getIDTerminalRuleCall_5());
		}
		otherlv_6='\'-//Uppaal'
		{
			newLeafNode(otherlv_6, grammarAccess.getNSTAAccess().getUppaalKeyword_6());
		}
		otherlv_7='Team//DTD'
		{
			newLeafNode(otherlv_7, grammarAccess.getNSTAAccess().getTeamDTDKeyword_7());
		}
		otherlv_8='Flat'
		{
			newLeafNode(otherlv_8, grammarAccess.getNSTAAccess().getFlatKeyword_8());
		}
		otherlv_9='System'
		{
			newLeafNode(otherlv_9, grammarAccess.getNSTAAccess().getSystemKeyword_9());
		}
		otherlv_10='1.1//EN\''
		{
			newLeafNode(otherlv_10, grammarAccess.getNSTAAccess().getENKeyword_10());
		}
		otherlv_11='\'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd\''
		{
			newLeafNode(otherlv_11, grammarAccess.getNSTAAccess().getHttpWwwItUuSeResearchGroupDartsUppaalFlat1_2DtdKeyword_11());
		}
		otherlv_12='>'
		{
			newLeafNode(otherlv_12, grammarAccess.getNSTAAccess().getGreaterThanSignKeyword_12());
		}
		otherlv_13='<nta>'
		{
			newLeafNode(otherlv_13, grammarAccess.getNSTAAccess().getNtaKeyword_13());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNSTAAccess().getGlobalDeclarationsGlobalDeclarationsParserRuleCall_14_0());
				}
				lv_globalDeclarations_14_0=ruleGlobalDeclarations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNSTARule());
					}
					set(
						$current,
						"globalDeclarations",
						lv_globalDeclarations_14_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.GlobalDeclarations");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getNSTAAccess().getTemplateTemplateParserRuleCall_15_0());
				}
				lv_template_15_0=ruleTemplate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNSTARule());
					}
					add(
						$current,
						"template",
						lv_template_15_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Template");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getNSTAAccess().getSystemDeclarationsSystemDeclarationsParserRuleCall_16_0());
				}
				lv_systemDeclarations_16_0=ruleSystemDeclarations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNSTARule());
					}
					set(
						$current,
						"systemDeclarations",
						lv_systemDeclarations_16_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.SystemDeclarations");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_QUERIES_17=RULE_QUERIES
			{
				newLeafNode(this_QUERIES_17, grammarAccess.getNSTAAccess().getQUERIESTerminalRuleCall_17());
			}
		)?
		otherlv_18='</nta>'
		{
			newLeafNode(otherlv_18, grammarAccess.getNSTAAccess().getNtaKeyword_18());
		}
	)
;

// Entry rule entryRuleXmlAttribute
entryRuleXmlAttribute returns [String current=null]:
	{ newCompositeNode(grammarAccess.getXmlAttributeRule()); }
	iv_ruleXmlAttribute=ruleXmlAttribute
	{ $current=$iv_ruleXmlAttribute.current.getText(); }
	EOF;

// Rule XmlAttribute
ruleXmlAttribute returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getXmlAttributeAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='='
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getXmlAttributeAccess().getEqualsSignKeyword_1_0());
			}
			this_STRING_2=RULE_STRING
			{
				$current.merge(this_STRING_2);
			}
			{
				newLeafNode(this_STRING_2, grammarAccess.getXmlAttributeAccess().getSTRINGTerminalRuleCall_1_1());
			}
		)?
	)
;

// Entry rule entryRuleGlobalDeclarations
entryRuleGlobalDeclarations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGlobalDeclarationsRule()); }
	iv_ruleGlobalDeclarations=ruleGlobalDeclarations
	{ $current=$iv_ruleGlobalDeclarations.current; }
	EOF;

// Rule GlobalDeclarations
ruleGlobalDeclarations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getGlobalDeclarationsAccess().getGlobalDeclarationsAction_0(),
					$current);
			}
		)
		otherlv_1='<declaration>'
		{
			newLeafNode(otherlv_1, grammarAccess.getGlobalDeclarationsAccess().getDeclarationKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGlobalDeclarationsAccess().getDeclarationDeclarationParserRuleCall_2_0());
				}
				lv_declaration_2_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGlobalDeclarationsRule());
					}
					add(
						$current,
						"declaration",
						lv_declaration_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getGlobalDeclarationsAccess().getChannelPriorityChannelPriorityParserRuleCall_3_0());
				}
				lv_channelPriority_3_0=ruleChannelPriority
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGlobalDeclarationsRule());
					}
					set(
						$current,
						"channelPriority",
						lv_channelPriority_3_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.ChannelPriority");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getGlobalDeclarationsAccess().getDeclarationDeclarationParserRuleCall_4_0());
				}
				lv_declaration_4_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGlobalDeclarationsRule());
					}
					add(
						$current,
						"declaration",
						lv_declaration_4_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='</declaration>'
		{
			newLeafNode(otherlv_5, grammarAccess.getGlobalDeclarationsAccess().getDeclarationKeyword_5());
		}
	)
;

// Entry rule entryRuleSystemDeclarations
entryRuleSystemDeclarations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemDeclarationsRule()); }
	iv_ruleSystemDeclarations=ruleSystemDeclarations
	{ $current=$iv_ruleSystemDeclarations.current; }
	EOF;

// Rule SystemDeclarations
ruleSystemDeclarations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<system>'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemDeclarationsAccess().getSystemKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemDeclarationsAccess().getDeclarationDeclarationParserRuleCall_1_0());
				}
				lv_declaration_1_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemDeclarationsRule());
					}
					add(
						$current,
						"declaration",
						lv_declaration_1_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemDeclarationsAccess().getSystemSystemParserRuleCall_2_0());
				}
				lv_system_2_0=ruleSystem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemDeclarationsRule());
					}
					set(
						$current,
						"system",
						lv_system_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.System");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemDeclarationsAccess().getProgressMeasureProgressMeasureParserRuleCall_3_0());
				}
				lv_progressMeasure_3_0=ruleProgressMeasure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemDeclarationsRule());
					}
					set(
						$current,
						"progressMeasure",
						lv_progressMeasure_3_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.ProgressMeasure");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4='</system>'
		{
			newLeafNode(otherlv_4, grammarAccess.getSystemDeclarationsAccess().getSystemKeyword_4());
		}
	)
;

// Entry rule entryRuleLocalDeclarations
entryRuleLocalDeclarations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocalDeclarationsRule()); }
	iv_ruleLocalDeclarations=ruleLocalDeclarations
	{ $current=$iv_ruleLocalDeclarations.current; }
	EOF;

// Rule LocalDeclarations
ruleLocalDeclarations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getLocalDeclarationsAccess().getLocalDeclarationsAction_0(),
					$current);
			}
		)
		otherlv_1='<declaration>'
		{
			newLeafNode(otherlv_1, grammarAccess.getLocalDeclarationsAccess().getDeclarationKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLocalDeclarationsAccess().getDeclarationDeclarationParserRuleCall_2_0());
				}
				lv_declaration_2_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocalDeclarationsRule());
					}
					add(
						$current,
						"declaration",
						lv_declaration_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='</declaration>'
		{
			newLeafNode(otherlv_3, grammarAccess.getLocalDeclarationsAccess().getDeclarationKeyword_3());
		}
	)
;

// Entry rule entryRuleLocalNonXmlDeclarations
entryRuleLocalNonXmlDeclarations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocalNonXmlDeclarationsRule()); }
	iv_ruleLocalNonXmlDeclarations=ruleLocalNonXmlDeclarations
	{ $current=$iv_ruleLocalNonXmlDeclarations.current; }
	EOF;

// Rule LocalNonXmlDeclarations
ruleLocalNonXmlDeclarations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getLocalNonXmlDeclarationsAccess().getLocalDeclarationsAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLocalNonXmlDeclarationsAccess().getDeclarationDeclarationParserRuleCall_1_0());
				}
				lv_declaration_1_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocalNonXmlDeclarationsRule());
					}
					add(
						$current,
						"declaration",
						lv_declaration_1_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDeclarationAccess().getFunctionDeclarationParserRuleCall_0());
		}
		this_FunctionDeclaration_0=ruleFunctionDeclaration
		{
			$current = $this_FunctionDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					/* */
				}
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getVariableDeclarationParserRuleCall_1_0_0());
				}
				this_VariableDeclaration_1=ruleVariableDeclaration
				{
					$current = $this_VariableDeclaration_1.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					/* */
				}
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getTypeDeclarationParserRuleCall_1_0_1());
				}
				this_TypeDeclaration_2=ruleTypeDeclaration
				{
					$current = $this_TypeDeclaration_2.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					/* */
				}
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getTemplateDeclarationParserRuleCall_1_0_2());
				}
				this_TemplateDeclaration_3=ruleTemplateDeclaration
				{
					$current = $this_TemplateDeclaration_3.current;
					afterParserOrEnumRuleCall();
				}
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getDeclarationAccess().getSemicolonKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleFunctionDeclaration
entryRuleFunctionDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionDeclarationRule()); }
	iv_ruleFunctionDeclaration=ruleFunctionDeclaration
	{ $current=$iv_ruleFunctionDeclaration.current; }
	EOF;

// Rule FunctionDeclaration
ruleFunctionDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFunctionDeclarationAccess().getFunctionFunctionParserRuleCall_0());
			}
			lv_function_0_0=ruleFunction
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getFunctionDeclarationRule());
				}
				set(
					$current,
					"function",
					lv_function_0_0,
					"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Function");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getReturnTypeTypeDefinitionParserRuleCall_0_0());
				}
				lv_returnType_0_0=ruleTypeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_0_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.TypeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionAccess().getParameterParameterParserRuleCall_3_0_0());
					}
					lv_parameter_3_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionRule());
						}
						add(
							$current,
							"parameter",
							lv_parameter_3_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionAccess().getParameterParameterParserRuleCall_3_1_1_0());
						}
						lv_parameter_5_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionRule());
							}
							add(
								$current,
								"parameter",
								lv_parameter_5_0,
								"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getBlockBlockParserRuleCall_5_0());
				}
				lv_block_7_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"block",
						lv_block_7_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDeclarationRule()); }
	iv_ruleVariableDeclaration=ruleVariableDeclaration
	{ $current=$iv_ruleVariableDeclaration.current; }
	EOF;

// Rule VariableDeclaration
ruleVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getVariableDeclarationAccess().getChannelVariableDeclarationParserRuleCall_0());
		}
		this_ChannelVariableDeclaration_0=ruleChannelVariableDeclaration
		{
			$current = $this_ChannelVariableDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getVariableDeclarationAccess().getClockVariableDeclarationParserRuleCall_1());
		}
		this_ClockVariableDeclaration_1=ruleClockVariableDeclaration
		{
			$current = $this_ClockVariableDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getVariableDeclarationAccess().getDataVariableDeclarationParserRuleCall_2());
		}
		this_DataVariableDeclaration_2=ruleDataVariableDeclaration
		{
			$current = $this_DataVariableDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleParamVariableDeclaration
entryRuleParamVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParamVariableDeclarationRule()); }
	iv_ruleParamVariableDeclaration=ruleParamVariableDeclaration
	{ $current=$iv_ruleParamVariableDeclaration.current; }
	EOF;

// Rule ParamVariableDeclaration
ruleParamVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getParamVariableDeclarationAccess().getParamChannelVariableDeclarationParserRuleCall_0());
		}
		this_ParamChannelVariableDeclaration_0=ruleParamChannelVariableDeclaration
		{
			$current = $this_ParamChannelVariableDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getParamVariableDeclarationAccess().getParamClockVariableDeclarationParserRuleCall_1());
		}
		this_ParamClockVariableDeclaration_1=ruleParamClockVariableDeclaration
		{
			$current = $this_ParamClockVariableDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getParamVariableDeclarationAccess().getParamDataVariableDeclarationParserRuleCall_2());
		}
		this_ParamDataVariableDeclaration_2=ruleParamDataVariableDeclaration
		{
			$current = $this_ParamDataVariableDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleParamRefVariableDeclaration
entryRuleParamRefVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParamRefVariableDeclarationRule()); }
	iv_ruleParamRefVariableDeclaration=ruleParamRefVariableDeclaration
	{ $current=$iv_ruleParamRefVariableDeclaration.current; }
	EOF;

// Rule ParamRefVariableDeclaration
ruleParamRefVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getParamRefVariableDeclarationAccess().getParamRefChannelVariableDeclarationParserRuleCall_0());
		}
		this_ParamRefChannelVariableDeclaration_0=ruleParamRefChannelVariableDeclaration
		{
			$current = $this_ParamRefChannelVariableDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getParamRefVariableDeclarationAccess().getParamRefClockVariableDeclarationParserRuleCall_1());
		}
		this_ParamRefClockVariableDeclaration_1=ruleParamRefClockVariableDeclaration
		{
			$current = $this_ParamRefClockVariableDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getParamRefVariableDeclarationAccess().getParamRefDataVariableDeclarationParserRuleCall_2());
		}
		this_ParamRefDataVariableDeclaration_2=ruleParamRefDataVariableDeclaration
		{
			$current = $this_ParamRefDataVariableDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleChannelVariableDeclaration
entryRuleChannelVariableDeclaration returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getChannelVariableDeclarationAccess().getUnorderedGroup_0()
	);
}:
	{ newCompositeNode(grammarAccess.getChannelVariableDeclarationRule()); }
	iv_ruleChannelVariableDeclaration=ruleChannelVariableDeclaration
	{ $current=$iv_ruleChannelVariableDeclaration.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule ChannelVariableDeclaration
ruleChannelVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getChannelVariableDeclarationAccess().getUnorderedGroup_0()
	);
}
@after {
	leaveRule();
}:
	(
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getChannelVariableDeclarationAccess().getUnorderedGroup_0());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getChannelVariableDeclarationAccess().getUnorderedGroup_0(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getChannelVariableDeclarationAccess().getUnorderedGroup_0(), 0);
					}
								({true}?=>((
									lv_urgent_1_0='urgent'
									{
										newLeafNode(lv_urgent_1_0, grammarAccess.getChannelVariableDeclarationAccess().getUrgentUrgentKeyword_0_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getChannelVariableDeclarationRule());
										}
										setWithLastConsumed($current, "urgent", true, "urgent");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChannelVariableDeclarationAccess().getUnorderedGroup_0());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getChannelVariableDeclarationAccess().getUnorderedGroup_0(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getChannelVariableDeclarationAccess().getUnorderedGroup_0(), 1);
					}
								({true}?=>((
									lv_broadcast_2_0='broadcast'
									{
										newLeafNode(lv_broadcast_2_0, grammarAccess.getChannelVariableDeclarationAccess().getBroadcastBroadcastKeyword_0_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getChannelVariableDeclarationRule());
										}
										setWithLastConsumed($current, "broadcast", true, "broadcast");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChannelVariableDeclarationAccess().getUnorderedGroup_0());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getChannelVariableDeclarationAccess().getUnorderedGroup_0());
				}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getChannelVariableDeclarationAccess().getTypeDefinitionChannelTypeReferenceParserRuleCall_1_0());
				}
				lv_typeDefinition_3_0=ruleChannelTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChannelVariableDeclarationRule());
					}
					set(
						$current,
						"typeDefinition",
						lv_typeDefinition_3_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.ChannelTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getChannelVariableDeclarationAccess().getVariableVariableParserRuleCall_2_0());
				}
				lv_variable_4_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChannelVariableDeclarationRule());
					}
					add(
						$current,
						"variable",
						lv_variable_4_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getChannelVariableDeclarationAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getChannelVariableDeclarationAccess().getVariableVariableParserRuleCall_3_1_0());
					}
					lv_variable_6_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChannelVariableDeclarationRule());
						}
						add(
							$current,
							"variable",
							lv_variable_6_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleParamChannelVariableDeclaration
entryRuleParamChannelVariableDeclaration returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getParamChannelVariableDeclarationAccess().getUnorderedGroup_0()
	);
}:
	{ newCompositeNode(grammarAccess.getParamChannelVariableDeclarationRule()); }
	iv_ruleParamChannelVariableDeclaration=ruleParamChannelVariableDeclaration
	{ $current=$iv_ruleParamChannelVariableDeclaration.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule ParamChannelVariableDeclaration
ruleParamChannelVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getParamChannelVariableDeclarationAccess().getUnorderedGroup_0()
	);
}
@after {
	leaveRule();
}:
	(
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getParamChannelVariableDeclarationAccess().getUnorderedGroup_0());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getParamChannelVariableDeclarationAccess().getUnorderedGroup_0(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getParamChannelVariableDeclarationAccess().getUnorderedGroup_0(), 0);
					}
								({true}?=>((
									lv_urgent_1_0='urgent'
									{
										newLeafNode(lv_urgent_1_0, grammarAccess.getParamChannelVariableDeclarationAccess().getUrgentUrgentKeyword_0_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getParamChannelVariableDeclarationRule());
										}
										setWithLastConsumed($current, "urgent", true, "urgent");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParamChannelVariableDeclarationAccess().getUnorderedGroup_0());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getParamChannelVariableDeclarationAccess().getUnorderedGroup_0(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getParamChannelVariableDeclarationAccess().getUnorderedGroup_0(), 1);
					}
								({true}?=>((
									lv_broadcast_2_0='broadcast'
									{
										newLeafNode(lv_broadcast_2_0, grammarAccess.getParamChannelVariableDeclarationAccess().getBroadcastBroadcastKeyword_0_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getParamChannelVariableDeclarationRule());
										}
										setWithLastConsumed($current, "broadcast", true, "broadcast");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParamChannelVariableDeclarationAccess().getUnorderedGroup_0());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getParamChannelVariableDeclarationAccess().getUnorderedGroup_0());
				}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParamChannelVariableDeclarationAccess().getTypeDefinitionChannelTypeReferenceParserRuleCall_1_0());
				}
				lv_typeDefinition_3_0=ruleChannelTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamChannelVariableDeclarationRule());
					}
					set(
						$current,
						"typeDefinition",
						lv_typeDefinition_3_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.ChannelTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParamChannelVariableDeclarationAccess().getVariableVariableParserRuleCall_2_0());
				}
				lv_variable_4_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamChannelVariableDeclarationRule());
					}
					add(
						$current,
						"variable",
						lv_variable_4_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleParamRefChannelVariableDeclaration
entryRuleParamRefChannelVariableDeclaration returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getParamRefChannelVariableDeclarationAccess().getUnorderedGroup_0()
	);
}:
	{ newCompositeNode(grammarAccess.getParamRefChannelVariableDeclarationRule()); }
	iv_ruleParamRefChannelVariableDeclaration=ruleParamRefChannelVariableDeclaration
	{ $current=$iv_ruleParamRefChannelVariableDeclaration.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule ParamRefChannelVariableDeclaration
ruleParamRefChannelVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getParamRefChannelVariableDeclarationAccess().getUnorderedGroup_0()
	);
}
@after {
	leaveRule();
}:
	(
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getParamRefChannelVariableDeclarationAccess().getUnorderedGroup_0());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getParamRefChannelVariableDeclarationAccess().getUnorderedGroup_0(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getParamRefChannelVariableDeclarationAccess().getUnorderedGroup_0(), 0);
					}
								({true}?=>((
									lv_urgent_1_0='urgent'
									{
										newLeafNode(lv_urgent_1_0, grammarAccess.getParamRefChannelVariableDeclarationAccess().getUrgentUrgentKeyword_0_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getParamRefChannelVariableDeclarationRule());
										}
										setWithLastConsumed($current, "urgent", true, "urgent");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParamRefChannelVariableDeclarationAccess().getUnorderedGroup_0());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getParamRefChannelVariableDeclarationAccess().getUnorderedGroup_0(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getParamRefChannelVariableDeclarationAccess().getUnorderedGroup_0(), 1);
					}
								({true}?=>((
									lv_broadcast_2_0='broadcast'
									{
										newLeafNode(lv_broadcast_2_0, grammarAccess.getParamRefChannelVariableDeclarationAccess().getBroadcastBroadcastKeyword_0_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getParamRefChannelVariableDeclarationRule());
										}
										setWithLastConsumed($current, "broadcast", true, "broadcast");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParamRefChannelVariableDeclarationAccess().getUnorderedGroup_0());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getParamRefChannelVariableDeclarationAccess().getUnorderedGroup_0());
				}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParamRefChannelVariableDeclarationAccess().getTypeDefinitionChannelTypeReferenceParserRuleCall_1_0());
				}
				lv_typeDefinition_3_0=ruleChannelTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamRefChannelVariableDeclarationRule());
					}
					set(
						$current,
						"typeDefinition",
						lv_typeDefinition_3_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.ChannelTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='&amp;'
		{
			newLeafNode(otherlv_4, grammarAccess.getParamRefChannelVariableDeclarationAccess().getAmpKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParamRefChannelVariableDeclarationAccess().getVariableVariableParserRuleCall_3_0());
				}
				lv_variable_5_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamRefChannelVariableDeclarationRule());
					}
					add(
						$current,
						"variable",
						lv_variable_5_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleClockVariableDeclaration
entryRuleClockVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClockVariableDeclarationRule()); }
	iv_ruleClockVariableDeclaration=ruleClockVariableDeclaration
	{ $current=$iv_ruleClockVariableDeclaration.current; }
	EOF;

// Rule ClockVariableDeclaration
ruleClockVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getClockVariableDeclarationAccess().getTypeDefinitionClockTypeReferenceParserRuleCall_0_0());
				}
				lv_typeDefinition_0_0=ruleClockTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClockVariableDeclarationRule());
					}
					set(
						$current,
						"typeDefinition",
						lv_typeDefinition_0_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.ClockTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClockVariableDeclarationAccess().getVariableVariableParserRuleCall_1_0());
				}
				lv_variable_1_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClockVariableDeclarationRule());
					}
					add(
						$current,
						"variable",
						lv_variable_1_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getClockVariableDeclarationAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getClockVariableDeclarationAccess().getVariableVariableParserRuleCall_2_1_0());
					}
					lv_variable_3_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClockVariableDeclarationRule());
						}
						add(
							$current,
							"variable",
							lv_variable_3_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleParamClockVariableDeclaration
entryRuleParamClockVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParamClockVariableDeclarationRule()); }
	iv_ruleParamClockVariableDeclaration=ruleParamClockVariableDeclaration
	{ $current=$iv_ruleParamClockVariableDeclaration.current; }
	EOF;

// Rule ParamClockVariableDeclaration
ruleParamClockVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParamClockVariableDeclarationAccess().getTypeDefinitionClockTypeReferenceParserRuleCall_0_0());
				}
				lv_typeDefinition_0_0=ruleClockTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamClockVariableDeclarationRule());
					}
					set(
						$current,
						"typeDefinition",
						lv_typeDefinition_0_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.ClockTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParamClockVariableDeclarationAccess().getVariableVariableParserRuleCall_1_0());
				}
				lv_variable_1_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamClockVariableDeclarationRule());
					}
					add(
						$current,
						"variable",
						lv_variable_1_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParamRefClockVariableDeclaration
entryRuleParamRefClockVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParamRefClockVariableDeclarationRule()); }
	iv_ruleParamRefClockVariableDeclaration=ruleParamRefClockVariableDeclaration
	{ $current=$iv_ruleParamRefClockVariableDeclaration.current; }
	EOF;

// Rule ParamRefClockVariableDeclaration
ruleParamRefClockVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParamRefClockVariableDeclarationAccess().getTypeDefinitionClockTypeReferenceParserRuleCall_0_0());
				}
				lv_typeDefinition_0_0=ruleClockTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamRefClockVariableDeclarationRule());
					}
					set(
						$current,
						"typeDefinition",
						lv_typeDefinition_0_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.ClockTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='&amp;'
		{
			newLeafNode(otherlv_1, grammarAccess.getParamRefClockVariableDeclarationAccess().getAmpKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParamRefClockVariableDeclarationAccess().getVariableVariableParserRuleCall_2_0());
				}
				lv_variable_2_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamRefClockVariableDeclarationRule());
					}
					add(
						$current,
						"variable",
						lv_variable_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDataVariableDeclaration
entryRuleDataVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataVariableDeclarationRule()); }
	iv_ruleDataVariableDeclaration=ruleDataVariableDeclaration
	{ $current=$iv_ruleDataVariableDeclaration.current; }
	EOF;

// Rule DataVariableDeclaration
ruleDataVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDataVariableDeclarationAccess().getPrefixDataVariablePrefixEnumRuleCall_0_0());
				}
				lv_prefix_0_0=ruleDataVariablePrefix
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataVariableDeclarationRule());
					}
					set(
						$current,
						"prefix",
						lv_prefix_0_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.DataVariablePrefix");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			('scalar' | 'struct' | RULE_ID)=>
			(
				{
					newCompositeNode(grammarAccess.getDataVariableDeclarationAccess().getTypeDefinitionTypeDefinitionParserRuleCall_1_0());
				}
				lv_typeDefinition_1_0=ruleTypeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataVariableDeclarationRule());
					}
					set(
						$current,
						"typeDefinition",
						lv_typeDefinition_1_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.TypeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDataVariableDeclarationAccess().getVariableVariableParserRuleCall_2_0());
				}
				lv_variable_2_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataVariableDeclarationRule());
					}
					add(
						$current,
						"variable",
						lv_variable_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getDataVariableDeclarationAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDataVariableDeclarationAccess().getVariableVariableParserRuleCall_3_1_0());
					}
					lv_variable_4_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataVariableDeclarationRule());
						}
						add(
							$current,
							"variable",
							lv_variable_4_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleParamDataVariableDeclaration
entryRuleParamDataVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParamDataVariableDeclarationRule()); }
	iv_ruleParamDataVariableDeclaration=ruleParamDataVariableDeclaration
	{ $current=$iv_ruleParamDataVariableDeclaration.current; }
	EOF;

// Rule ParamDataVariableDeclaration
ruleParamDataVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParamDataVariableDeclarationAccess().getPrefixDataVariablePrefixEnumRuleCall_0_0());
				}
				lv_prefix_0_0=ruleDataVariablePrefix
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamDataVariableDeclarationRule());
					}
					set(
						$current,
						"prefix",
						lv_prefix_0_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.DataVariablePrefix");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			('scalar' | 'struct' | RULE_ID)=>
			(
				{
					newCompositeNode(grammarAccess.getParamDataVariableDeclarationAccess().getTypeDefinitionTypeDefinitionParserRuleCall_1_0());
				}
				lv_typeDefinition_1_0=ruleTypeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamDataVariableDeclarationRule());
					}
					set(
						$current,
						"typeDefinition",
						lv_typeDefinition_1_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.TypeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParamDataVariableDeclarationAccess().getVariableVariableParserRuleCall_2_0());
				}
				lv_variable_2_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamDataVariableDeclarationRule());
					}
					add(
						$current,
						"variable",
						lv_variable_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParamRefDataVariableDeclaration
entryRuleParamRefDataVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParamRefDataVariableDeclarationRule()); }
	iv_ruleParamRefDataVariableDeclaration=ruleParamRefDataVariableDeclaration
	{ $current=$iv_ruleParamRefDataVariableDeclaration.current; }
	EOF;

// Rule ParamRefDataVariableDeclaration
ruleParamRefDataVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParamRefDataVariableDeclarationAccess().getPrefixDataVariablePrefixEnumRuleCall_0_0());
				}
				lv_prefix_0_0=ruleDataVariablePrefix
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamRefDataVariableDeclarationRule());
					}
					set(
						$current,
						"prefix",
						lv_prefix_0_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.DataVariablePrefix");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			('scalar' | 'struct' | RULE_ID)=>
			(
				{
					newCompositeNode(grammarAccess.getParamRefDataVariableDeclarationAccess().getTypeDefinitionTypeDefinitionParserRuleCall_1_0());
				}
				lv_typeDefinition_1_0=ruleTypeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamRefDataVariableDeclarationRule());
					}
					set(
						$current,
						"typeDefinition",
						lv_typeDefinition_1_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.TypeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='&amp;'
		{
			newLeafNode(otherlv_2, grammarAccess.getParamRefDataVariableDeclarationAccess().getAmpKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParamRefDataVariableDeclarationAccess().getVariableVariableParserRuleCall_3_0());
				}
				lv_variable_3_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamRefDataVariableDeclarationRule());
					}
					add(
						$current,
						"variable",
						lv_variable_3_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeDeclaration
entryRuleTypeDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDeclarationRule()); }
	iv_ruleTypeDeclaration=ruleTypeDeclaration
	{ $current=$iv_ruleTypeDeclaration.current; }
	EOF;

// Rule TypeDeclaration
ruleTypeDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='typedef'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeDeclarationAccess().getTypedefKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeDeclarationAccess().getTypeDefinitionTypeDefinitionParserRuleCall_1_0());
				}
				lv_typeDefinition_1_0=ruleTypeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
					}
					set(
						$current,
						"typeDefinition",
						lv_typeDefinition_1_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.TypeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeDeclarationAccess().getTypeDeclaredTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleDeclaredType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
					}
					add(
						$current,
						"type",
						lv_type_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.DeclaredType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getTypeDeclarationAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeDeclarationAccess().getTypeDeclaredTypeParserRuleCall_3_1_0());
					}
					lv_type_4_0=ruleDeclaredType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
						}
						add(
							$current,
							"type",
							lv_type_4_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.DeclaredType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getVariableDeclarationParamVariableDeclarationParserRuleCall_0_0());
				}
				lv_variableDeclaration_0_0=ruleParamVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"variableDeclaration",
						lv_variableDeclaration_0_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.ParamVariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getVariableDeclarationParamRefVariableDeclarationParserRuleCall_1_0_0());
					}
					lv_variableDeclaration_1_0=ruleParamRefVariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"variableDeclaration",
							lv_variableDeclaration_1_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.ParamRefVariableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getCallTypeCallByReferenceEnumRuleCall_1_1_0());
					}
					lv_callType_2_0=ruleCallByReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"callType",
							lv_callType_2_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.CallByReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getVariableAccess().getVariableAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableAccess().getIndexIndexParserRuleCall_2_0());
				}
				lv_index_2_0=ruleIndex
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableRule());
					}
					add(
						$current,
						"index",
						lv_index_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Index");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_3='='
			{
				newLeafNode(otherlv_3, grammarAccess.getVariableAccess().getEqualsSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableAccess().getInitializerInitializerParserRuleCall_3_1_0());
					}
					lv_initializer_4_0=ruleInitializer
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableRule());
						}
						set(
							$current,
							"initializer",
							lv_initializer_4_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Initializer");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleIndex
entryRuleIndex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexRule()); }
	iv_ruleIndex=ruleIndex
	{ $current=$iv_ruleIndex.current; }
	EOF;

// Rule Index
ruleIndex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getIndexAccess().getValueIndexParserRuleCall_0());
		}
		this_ValueIndex_0=ruleValueIndex
		{
			$current = $this_ValueIndex_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getIndexAccess().getTypeIndexParserRuleCall_1());
		}
		this_TypeIndex_1=ruleTypeIndex
		{
			$current = $this_TypeIndex_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleValueIndex
entryRuleValueIndex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueIndexRule()); }
	iv_ruleValueIndex=ruleValueIndex
	{ $current=$iv_ruleValueIndex.current; }
	EOF;

// Rule ValueIndex
ruleValueIndex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getValueIndexAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getValueIndexAccess().getSizeExpressionExpressionParserRuleCall_1_0());
				}
				lv_sizeExpression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueIndexRule());
					}
					set(
						$current,
						"sizeExpression",
						lv_sizeExpression_1_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getValueIndexAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleTypeIndex
entryRuleTypeIndex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeIndexRule()); }
	iv_ruleTypeIndex=ruleTypeIndex
	{ $current=$iv_ruleTypeIndex.current; }
	EOF;

// Rule TypeIndex
ruleTypeIndex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeIndexAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeIndexAccess().getTypeDefinitionTypeDefinitionParserRuleCall_1_0());
				}
				lv_typeDefinition_1_0=ruleTypeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeIndexRule());
					}
					set(
						$current,
						"typeDefinition",
						lv_typeDefinition_1_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.TypeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getTypeIndexAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleInitializer
entryRuleInitializer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitializerRule()); }
	iv_ruleInitializer=ruleInitializer
	{ $current=$iv_ruleInitializer.current; }
	EOF;

// Rule Initializer
ruleInitializer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getInitializerAccess().getExpressionInitializerParserRuleCall_0());
		}
		this_ExpressionInitializer_0=ruleExpressionInitializer
		{
			$current = $this_ExpressionInitializer_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getInitializerAccess().getArrayInitializerParserRuleCall_1());
		}
		this_ArrayInitializer_1=ruleArrayInitializer
		{
			$current = $this_ArrayInitializer_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpressionInitializer
entryRuleExpressionInitializer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionInitializerRule()); }
	iv_ruleExpressionInitializer=ruleExpressionInitializer
	{ $current=$iv_ruleExpressionInitializer.current; }
	EOF;

// Rule ExpressionInitializer
ruleExpressionInitializer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getExpressionInitializerAccess().getExpressionExpressionParserRuleCall_0());
			}
			lv_expression_0_0=ruleExpression
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getExpressionInitializerRule());
				}
				set(
					$current,
					"expression",
					lv_expression_0_0,
					"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleArrayInitializer
entryRuleArrayInitializer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayInitializerRule()); }
	iv_ruleArrayInitializer=ruleArrayInitializer
	{ $current=$iv_ruleArrayInitializer.current; }
	EOF;

// Rule ArrayInitializer
ruleArrayInitializer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getArrayInitializerAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayInitializerAccess().getInitializerInitializerParserRuleCall_1_0());
				}
				lv_initializer_1_0=ruleInitializer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayInitializerRule());
					}
					add(
						$current,
						"initializer",
						lv_initializer_1_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Initializer");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getArrayInitializerAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayInitializerAccess().getInitializerInitializerParserRuleCall_2_1_0());
					}
					lv_initializer_3_0=ruleInitializer
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayInitializerRule());
						}
						add(
							$current,
							"initializer",
							lv_initializer_3_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Initializer");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getArrayInitializerAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleTemplateDeclaration
entryRuleTemplateDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemplateDeclarationRule()); }
	iv_ruleTemplateDeclaration=ruleTemplateDeclaration
	{ $current=$iv_ruleTemplateDeclaration.current; }
	EOF;

// Rule TemplateDeclaration
ruleTemplateDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTemplateDeclarationAccess().getDeclaredTemplateRedefinedTemplateParserRuleCall_0_0());
				}
				lv_declaredTemplate_0_0=ruleRedefinedTemplate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTemplateDeclarationRule());
					}
					set(
						$current,
						"declaredTemplate",
						lv_declaredTemplate_0_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.RedefinedTemplate");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTemplateDeclarationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTemplateDeclarationAccess().getArgumentExpressionParserRuleCall_2_0_0());
					}
					lv_argument_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemplateDeclarationRule());
						}
						add(
							$current,
							"argument",
							lv_argument_2_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getTemplateDeclarationAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTemplateDeclarationAccess().getArgumentExpressionParserRuleCall_2_1_1_0());
						}
						lv_argument_4_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTemplateDeclarationRule());
							}
							add(
								$current,
								"argument",
								lv_argument_4_0,
								"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getTemplateDeclarationAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleSystem
entryRuleSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemRule()); }
	iv_ruleSystem=ruleSystem
	{ $current=$iv_ruleSystem.current; }
	EOF;

// Rule System
ruleSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemAccess().getSystemKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemAccess().getInstantiationListInstantiationListParserRuleCall_1_0());
				}
				lv_instantiationList_1_0=ruleInstantiationList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRule());
					}
					add(
						$current,
						"instantiationList",
						lv_instantiationList_1_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.InstantiationList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='&lt;'
			{
				newLeafNode(otherlv_2, grammarAccess.getSystemAccess().getLtKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSystemAccess().getInstantiationListInstantiationListParserRuleCall_2_1_0());
					}
					lv_instantiationList_3_0=ruleInstantiationList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSystemRule());
						}
						add(
							$current,
							"instantiationList",
							lv_instantiationList_3_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.InstantiationList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getSystemAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleInstantiationList
entryRuleInstantiationList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstantiationListRule()); }
	iv_ruleInstantiationList=ruleInstantiationList
	{ $current=$iv_ruleInstantiationList.current; }
	EOF;

// Rule InstantiationList
ruleInstantiationList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInstantiationListRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getInstantiationListAccess().getTemplateAbstractTemplateCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getInstantiationListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInstantiationListRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getInstantiationListAccess().getTemplateAbstractTemplateCrossReference_1_1_0());
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleProgressMeasure
entryRuleProgressMeasure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgressMeasureRule()); }
	iv_ruleProgressMeasure=ruleProgressMeasure
	{ $current=$iv_ruleProgressMeasure.current; }
	EOF;

// Rule ProgressMeasure
ruleProgressMeasure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='progress'
		{
			newLeafNode(otherlv_0, grammarAccess.getProgressMeasureAccess().getProgressKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getProgressMeasureAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getProgressMeasureAccess().getExpressionExpressionParserRuleCall_2_0_0());
					}
					lv_expression_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProgressMeasureRule());
						}
						add(
							$current,
							"expression",
							lv_expression_2_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getProgressMeasureAccess().getSemicolonKeyword_2_1());
			}
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getProgressMeasureAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleChannelPriority
entryRuleChannelPriority returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChannelPriorityRule()); }
	iv_ruleChannelPriority=ruleChannelPriority
	{ $current=$iv_ruleChannelPriority.current; }
	EOF;

// Rule ChannelPriority
ruleChannelPriority returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_CHAN_0=RULE_CHAN
		{
			newLeafNode(this_CHAN_0, grammarAccess.getChannelPriorityAccess().getCHANTerminalRuleCall_0());
		}
		otherlv_1='priority'
		{
			newLeafNode(otherlv_1, grammarAccess.getChannelPriorityAccess().getPriorityKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChannelPriorityAccess().getItemChannelPriorityItemParserRuleCall_2_0());
				}
				lv_item_2_0=ruleChannelPriorityItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChannelPriorityRule());
					}
					add(
						$current,
						"item",
						lv_item_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.ChannelPriorityItem");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='<'
			{
				newLeafNode(otherlv_3, grammarAccess.getChannelPriorityAccess().getLessThanSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getChannelPriorityAccess().getItemChannelPriorityItemParserRuleCall_3_1_0());
					}
					lv_item_4_0=ruleChannelPriorityItem
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChannelPriorityRule());
						}
						add(
							$current,
							"item",
							lv_item_4_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.ChannelPriorityItem");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getChannelPriorityAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleChannelPriorityItem
entryRuleChannelPriorityItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChannelPriorityItemRule()); }
	iv_ruleChannelPriorityItem=ruleChannelPriorityItem
	{ $current=$iv_ruleChannelPriorityItem.current; }
	EOF;

// Rule ChannelPriorityItem
ruleChannelPriorityItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getChannelPriorityItemAccess().getChannelListParserRuleCall_0());
		}
		this_ChannelList_0=ruleChannelList
		{
			$current = $this_ChannelList_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getChannelPriorityItemAccess().getDefaultChannelPriorityParserRuleCall_1());
		}
		this_DefaultChannelPriority_1=ruleDefaultChannelPriority
		{
			$current = $this_DefaultChannelPriority_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleChannelList
entryRuleChannelList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChannelListRule()); }
	iv_ruleChannelList=ruleChannelList
	{ $current=$iv_ruleChannelList.current; }
	EOF;

// Rule ChannelList
ruleChannelList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getChannelListAccess().getChannelExpressionIdentifierExpressionParserRuleCall_0_0());
				}
				lv_channelExpression_0_0=ruleIdentifierExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChannelListRule());
					}
					add(
						$current,
						"channelExpression",
						lv_channelExpression_0_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.IdentifierExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getChannelListAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getChannelListAccess().getChannelExpressionIdentifierExpressionParserRuleCall_1_1_0());
					}
					lv_channelExpression_2_0=ruleIdentifierExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChannelListRule());
						}
						add(
							$current,
							"channelExpression",
							lv_channelExpression_2_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.IdentifierExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDefaultChannelPriority
entryRuleDefaultChannelPriority returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefaultChannelPriorityRule()); }
	iv_ruleDefaultChannelPriority=ruleDefaultChannelPriority
	{ $current=$iv_ruleDefaultChannelPriority.current; }
	EOF;

// Rule DefaultChannelPriority
ruleDefaultChannelPriority returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getDefaultChannelPriorityAccess().getDefaultChannelPriorityAction_0(),
					$current);
			}
		)
		otherlv_1='default'
		{
			newLeafNode(otherlv_1, grammarAccess.getDefaultChannelPriorityAccess().getDefaultKeyword_1());
		}
	)
;

// Entry rule entryRuleTemplate
entryRuleTemplate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemplateRule()); }
	iv_ruleTemplate=ruleTemplate
	{ $current=$iv_ruleTemplate.current; }
	EOF;

// Rule Template
ruleTemplate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<template>'
		{
			newLeafNode(otherlv_0, grammarAccess.getTemplateAccess().getTemplateKeyword_0());
		}
		otherlv_1='<name'
		{
			newLeafNode(otherlv_1, grammarAccess.getTemplateAccess().getNameKeyword_1());
		}
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getTemplateAccess().getXmlAttributeParserRuleCall_2());
			}
			ruleXmlAttribute
			{
				afterParserOrEnumRuleCall();
			}
		)*
		otherlv_3='>'
		{
			newLeafNode(otherlv_3, grammarAccess.getTemplateAccess().getGreaterThanSignKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getTemplateAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTemplateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='</name>'
		{
			newLeafNode(otherlv_5, grammarAccess.getTemplateAccess().getNameKeyword_5());
		}
		(
			otherlv_6='<parameter>'
			{
				newLeafNode(otherlv_6, grammarAccess.getTemplateAccess().getParameterKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTemplateAccess().getParameterParameterParserRuleCall_6_1_0());
					}
					lv_parameter_7_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemplateRule());
						}
						add(
							$current,
							"parameter",
							lv_parameter_7_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getTemplateAccess().getCommaKeyword_6_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTemplateAccess().getParameterParameterParserRuleCall_6_2_1_0());
						}
						lv_parameter_9_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTemplateRule());
							}
							add(
								$current,
								"parameter",
								lv_parameter_9_0,
								"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='</parameter>'
			{
				newLeafNode(otherlv_10, grammarAccess.getTemplateAccess().getParameterKeyword_6_3());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTemplateAccess().getDeclarationsLocalDeclarationsParserRuleCall_7_0());
				}
				lv_declarations_11_0=ruleLocalDeclarations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTemplateRule());
					}
					set(
						$current,
						"declarations",
						lv_declarations_11_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.LocalDeclarations");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTemplateAccess().getLocationLocationParserRuleCall_8_0());
				}
				lv_location_12_0=ruleLocation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTemplateRule());
					}
					add(
						$current,
						"location",
						lv_location_12_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Location");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_13='<init'
		{
			newLeafNode(otherlv_13, grammarAccess.getTemplateAccess().getInitKeyword_9());
		}
		otherlv_14='ref'
		{
			newLeafNode(otherlv_14, grammarAccess.getTemplateAccess().getRefKeyword_10());
		}
		otherlv_15='='
		{
			newLeafNode(otherlv_15, grammarAccess.getTemplateAccess().getEqualsSignKeyword_11());
		}
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTemplateRule());
					}
				}
				otherlv_16=RULE_STRING
				{
					newLeafNode(otherlv_16, grammarAccess.getTemplateAccess().getInitLocationCrossReference_12_0());
				}
			)
		)
		otherlv_17='/>'
		{
			newLeafNode(otherlv_17, grammarAccess.getTemplateAccess().getSolidusGreaterThanSignKeyword_13());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTemplateAccess().getEdgeEdgeParserRuleCall_14_0());
				}
				lv_edge_18_0=ruleEdge
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTemplateRule());
					}
					add(
						$current,
						"edge",
						lv_edge_18_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Edge");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_19='</template>'
		{
			newLeafNode(otherlv_19, grammarAccess.getTemplateAccess().getTemplateKeyword_15());
		}
	)
;

// Entry rule entryRuleRedefinedTemplate
entryRuleRedefinedTemplate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRedefinedTemplateRule()); }
	iv_ruleRedefinedTemplate=ruleRedefinedTemplate
	{ $current=$iv_ruleRedefinedTemplate.current; }
	EOF;

// Rule RedefinedTemplate
ruleRedefinedTemplate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getRedefinedTemplateAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRedefinedTemplateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getRedefinedTemplateAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRedefinedTemplateAccess().getParameterParameterParserRuleCall_1_1_0());
					}
					lv_parameter_2_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRedefinedTemplateRule());
						}
						add(
							$current,
							"parameter",
							lv_parameter_2_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getRedefinedTemplateAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRedefinedTemplateAccess().getParameterParameterParserRuleCall_1_2_1_0());
						}
						lv_parameter_4_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRedefinedTemplateRule());
							}
							add(
								$current,
								"parameter",
								lv_parameter_4_0,
								"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getRedefinedTemplateAccess().getRightParenthesisKeyword_1_3());
			}
		)*
		(
			otherlv_6=':='
			{
				newLeafNode(otherlv_6, grammarAccess.getRedefinedTemplateAccess().getColonEqualsSignKeyword_2_0());
			}
			    |
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getRedefinedTemplateAccess().getEqualsSignKeyword_2_1());
			}
		)
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRedefinedTemplateRule());
					}
				}
				otherlv_8=RULE_ID
				{
					newLeafNode(otherlv_8, grammarAccess.getRedefinedTemplateAccess().getReferredTemplateAbstractTemplateCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleLocation
entryRuleLocation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocationRule()); }
	iv_ruleLocation=ruleLocation
	{ $current=$iv_ruleLocation.current; }
	EOF;

// Rule Location
ruleLocation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			('<location')=>
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getLocationAccess().getELocationParserRuleCall_0());
			}
			this_ELocation_0=ruleELocation
			{
				$current = $this_ELocation_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLocationAccess().getNLocationParserRuleCall_1());
		}
		this_NLocation_1=ruleNLocation
		{
			$current = $this_NLocation_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLocationAccess().getBranchPointParserRuleCall_2());
		}
		this_BranchPoint_2=ruleBranchPoint
		{
			$current = $this_BranchPoint_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBranchPoint
entryRuleBranchPoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBranchPointRule()); }
	iv_ruleBranchPoint=ruleBranchPoint
	{ $current=$iv_ruleBranchPoint.current; }
	EOF;

// Rule BranchPoint
ruleBranchPoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='<branchpoint'
			{
				newLeafNode(otherlv_0, grammarAccess.getBranchPointAccess().getBranchpointKeyword_0_0());
			}
			(
				this_ID_1=RULE_ID
				{
					newLeafNode(this_ID_1, grammarAccess.getBranchPointAccess().getIDTerminalRuleCall_0_1_0());
				}
				otherlv_2='='
				{
					newLeafNode(otherlv_2, grammarAccess.getBranchPointAccess().getEqualsSignKeyword_0_1_1());
				}
				(
					(
						lv_name_3_0=RULE_STRING
						{
							newLeafNode(lv_name_3_0, grammarAccess.getBranchPointAccess().getNameSTRINGTerminalRuleCall_0_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBranchPointRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_3_0,
								"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.STRING");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBranchPointAccess().getPositionPointParserRuleCall_0_2_0());
					}
					lv_position_4_0=rulePoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBranchPointRule());
						}
						set(
							$current,
							"position",
							lv_position_4_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Point");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_5='color'
				{
					newLeafNode(otherlv_5, grammarAccess.getBranchPointAccess().getColorKeyword_0_3_0());
				}
				otherlv_6='='
				{
					newLeafNode(otherlv_6, grammarAccess.getBranchPointAccess().getEqualsSignKeyword_0_3_1());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getBranchPointAccess().getColorColorKindEnumRuleCall_0_3_2_0_0());
							}
							lv_color_7_0=ruleColorKind
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBranchPointRule());
								}
								set(
									$current,
									"color",
									lv_color_7_0,
									"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.ColorKind");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							lv_colorCode_8_0=RULE_STRING
							{
								newLeafNode(lv_colorCode_8_0, grammarAccess.getBranchPointAccess().getColorCodeSTRINGTerminalRuleCall_0_3_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getBranchPointRule());
								}
								setWithLastConsumed(
									$current,
									"colorCode",
									lv_colorCode_8_0,
									"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.STRING");
							}
						)
					)
				)
			)?
			otherlv_9='>'
			{
				newLeafNode(otherlv_9, grammarAccess.getBranchPointAccess().getGreaterThanSignKeyword_0_4());
			}
		)
		otherlv_10='</branchpoint>'
		{
			newLeafNode(otherlv_10, grammarAccess.getBranchPointAccess().getBranchpointKeyword_1());
		}
	)
;

// Entry rule entryRuleNLocation
entryRuleNLocation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNLocationRule()); }
	iv_ruleNLocation=ruleNLocation
	{ $current=$iv_ruleNLocation.current; }
	EOF;

// Rule NLocation
ruleNLocation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='<location'
			{
				newLeafNode(otherlv_0, grammarAccess.getNLocationAccess().getLocationKeyword_0_0());
			}
			(
				this_ID_1=RULE_ID
				{
					newLeafNode(this_ID_1, grammarAccess.getNLocationAccess().getIDTerminalRuleCall_0_1_0());
				}
				otherlv_2='='
				{
					newLeafNode(otherlv_2, grammarAccess.getNLocationAccess().getEqualsSignKeyword_0_1_1());
				}
				(
					(
						lv_name_3_0=RULE_STRING
						{
							newLeafNode(lv_name_3_0, grammarAccess.getNLocationAccess().getNameSTRINGTerminalRuleCall_0_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNLocationRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_3_0,
								"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.STRING");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNLocationAccess().getPositionPointParserRuleCall_0_2_0());
					}
					lv_position_4_0=rulePoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNLocationRule());
						}
						set(
							$current,
							"position",
							lv_position_4_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Point");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_5='color'
				{
					newLeafNode(otherlv_5, grammarAccess.getNLocationAccess().getColorKeyword_0_3_0());
				}
				otherlv_6='='
				{
					newLeafNode(otherlv_6, grammarAccess.getNLocationAccess().getEqualsSignKeyword_0_3_1());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getNLocationAccess().getColorColorKindEnumRuleCall_0_3_2_0_0());
							}
							lv_color_7_0=ruleColorKind
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getNLocationRule());
								}
								set(
									$current,
									"color",
									lv_color_7_0,
									"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.ColorKind");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							lv_colorCode_8_0=RULE_STRING
							{
								newLeafNode(lv_colorCode_8_0, grammarAccess.getNLocationAccess().getColorCodeSTRINGTerminalRuleCall_0_3_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getNLocationRule());
								}
								setWithLastConsumed(
									$current,
									"colorCode",
									lv_colorCode_8_0,
									"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.STRING");
							}
						)
					)
				)
			)?
			otherlv_9='>'
			{
				newLeafNode(otherlv_9, grammarAccess.getNLocationAccess().getGreaterThanSignKeyword_0_4());
			}
		)
		(
			otherlv_10='<name'
			{
				newLeafNode(otherlv_10, grammarAccess.getNLocationAccess().getNameKeyword_1_0());
			}
			(
				{
					/* */
				}
				{
					newCompositeNode(grammarAccess.getNLocationAccess().getXmlAttributeParserRuleCall_1_1());
				}
				ruleXmlAttribute
				{
					afterParserOrEnumRuleCall();
				}
			)*
			otherlv_12='>'
			{
				newLeafNode(otherlv_12, grammarAccess.getNLocationAccess().getGreaterThanSignKeyword_1_2());
			}
			(
				(
					lv_comment_13_0=RULE_ID
					{
						newLeafNode(lv_comment_13_0, grammarAccess.getNLocationAccess().getCommentIDTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNLocationRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_13_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_14='</name>'
			{
				newLeafNode(otherlv_14, grammarAccess.getNLocationAccess().getNameKeyword_1_4());
			}
		)?
		(
			otherlv_15='<label'
			{
				newLeafNode(otherlv_15, grammarAccess.getNLocationAccess().getLabelKeyword_2_0());
			}
			otherlv_16='kind="invariant"'
			{
				newLeafNode(otherlv_16, grammarAccess.getNLocationAccess().getKindInvariantKeyword_2_1());
			}
			(
				{
					/* */
				}
				{
					newCompositeNode(grammarAccess.getNLocationAccess().getXmlAttributeParserRuleCall_2_2());
				}
				ruleXmlAttribute
				{
					afterParserOrEnumRuleCall();
				}
			)*
			otherlv_18='>'
			{
				newLeafNode(otherlv_18, grammarAccess.getNLocationAccess().getGreaterThanSignKeyword_2_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNLocationAccess().getInvariantExpressionParserRuleCall_2_4_0());
					}
					lv_invariant_19_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNLocationRule());
						}
						set(
							$current,
							"invariant",
							lv_invariant_19_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_20='</label>'
			{
				newLeafNode(otherlv_20, grammarAccess.getNLocationAccess().getLabelKeyword_2_5());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getNLocationAccess().getLocationTimeKindLocationKindEnumRuleCall_3_0());
				}
				lv_locationTimeKind_21_0=ruleLocationKind
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNLocationRule());
					}
					set(
						$current,
						"locationTimeKind",
						lv_locationTimeKind_21_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.LocationKind");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_22='</location>'
		{
			newLeafNode(otherlv_22, grammarAccess.getNLocationAccess().getLocationKeyword_4());
		}
	)
;

// Entry rule entryRuleELocation
entryRuleELocation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getELocationRule()); }
	iv_ruleELocation=ruleELocation
	{ $current=$iv_ruleELocation.current; }
	EOF;

// Rule ELocation
ruleELocation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='<location'
			{
				newLeafNode(otherlv_0, grammarAccess.getELocationAccess().getLocationKeyword_0_0());
			}
			(
				this_ID_1=RULE_ID
				{
					newLeafNode(this_ID_1, grammarAccess.getELocationAccess().getIDTerminalRuleCall_0_1_0());
				}
				otherlv_2='='
				{
					newLeafNode(otherlv_2, grammarAccess.getELocationAccess().getEqualsSignKeyword_0_1_1());
				}
				(
					(
						lv_name_3_0=RULE_STRING
						{
							newLeafNode(lv_name_3_0, grammarAccess.getELocationAccess().getNameSTRINGTerminalRuleCall_0_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getELocationRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_3_0,
								"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.STRING");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getELocationAccess().getPositionPointParserRuleCall_0_2_0());
					}
					lv_position_4_0=rulePoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getELocationRule());
						}
						set(
							$current,
							"position",
							lv_position_4_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Point");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				otherlv_5='color'
				{
					newLeafNode(otherlv_5, grammarAccess.getELocationAccess().getColorKeyword_0_3_0());
				}
				otherlv_6='='
				{
					newLeafNode(otherlv_6, grammarAccess.getELocationAccess().getEqualsSignKeyword_0_3_1());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getELocationAccess().getColorColorKindEnumRuleCall_0_3_2_0_0());
							}
							lv_color_7_0=ruleColorKind
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getELocationRule());
								}
								set(
									$current,
									"color",
									lv_color_7_0,
									"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.ColorKind");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							lv_colorCode_8_0=RULE_STRING
							{
								newLeafNode(lv_colorCode_8_0, grammarAccess.getELocationAccess().getColorCodeSTRINGTerminalRuleCall_0_3_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getELocationRule());
								}
								setWithLastConsumed(
									$current,
									"colorCode",
									lv_colorCode_8_0,
									"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.STRING");
							}
						)
					)
				)
			)?
			otherlv_9='>'
			{
				newLeafNode(otherlv_9, grammarAccess.getELocationAccess().getGreaterThanSignKeyword_0_4());
			}
		)
		(
			otherlv_10='<name'
			{
				newLeafNode(otherlv_10, grammarAccess.getELocationAccess().getNameKeyword_1_0());
			}
			(
				{
					/* */
				}
				{
					newCompositeNode(grammarAccess.getELocationAccess().getXmlAttributeParserRuleCall_1_1());
				}
				ruleXmlAttribute
				{
					afterParserOrEnumRuleCall();
				}
			)*
			otherlv_12='>'
			{
				newLeafNode(otherlv_12, grammarAccess.getELocationAccess().getGreaterThanSignKeyword_1_2());
			}
			(
				(
					lv_comment_13_0=RULE_ID
					{
						newLeafNode(lv_comment_13_0, grammarAccess.getELocationAccess().getCommentIDTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getELocationRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_13_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_14='</name>'
			{
				newLeafNode(otherlv_14, grammarAccess.getELocationAccess().getNameKeyword_1_4());
			}
		)?
		(
			otherlv_15='<label'
			{
				newLeafNode(otherlv_15, grammarAccess.getELocationAccess().getLabelKeyword_2_0());
			}
			otherlv_16='kind="invariant"'
			{
				newLeafNode(otherlv_16, grammarAccess.getELocationAccess().getKindInvariantKeyword_2_1());
			}
			(
				{
					/* */
				}
				{
					newCompositeNode(grammarAccess.getELocationAccess().getXmlAttributeParserRuleCall_2_2());
				}
				ruleXmlAttribute
				{
					afterParserOrEnumRuleCall();
				}
			)*
			otherlv_18='>'
			{
				newLeafNode(otherlv_18, grammarAccess.getELocationAccess().getGreaterThanSignKeyword_2_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getELocationAccess().getInvariantExpressionParserRuleCall_2_4_0());
					}
					lv_invariant_19_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getELocationRule());
						}
						set(
							$current,
							"invariant",
							lv_invariant_19_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_20='</label>'
			{
				newLeafNode(otherlv_20, grammarAccess.getELocationAccess().getLabelKeyword_2_5());
			}
		)?
		otherlv_21='<label'
		{
			newLeafNode(otherlv_21, grammarAccess.getELocationAccess().getLabelKeyword_3());
		}
		(
			('kind="exponentialrate"')=>
			otherlv_22='kind="exponentialrate"'
			{
				newLeafNode(otherlv_22, grammarAccess.getELocationAccess().getKindExponentialrateKeyword_4());
			}
		)
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getELocationAccess().getXmlAttributeParserRuleCall_5());
			}
			ruleXmlAttribute
			{
				afterParserOrEnumRuleCall();
			}
		)*
		otherlv_24='>'
		{
			newLeafNode(otherlv_24, grammarAccess.getELocationAccess().getGreaterThanSignKeyword_6());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getELocationAccess().getExitRateRatioExpressionParserRuleCall_7_0_0());
					}
					lv_exitRate_25_1=ruleRatioExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getELocationRule());
						}
						set(
							$current,
							"exitRate",
							lv_exitRate_25_1,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.RatioExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getELocationAccess().getExitRateExpressionParserRuleCall_7_0_1());
					}
					lv_exitRate_25_2=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getELocationRule());
						}
						set(
							$current,
							"exitRate",
							lv_exitRate_25_2,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_26='</label>'
		{
			newLeafNode(otherlv_26, grammarAccess.getELocationAccess().getLabelKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getELocationAccess().getLocationTimeKindLocationKindEnumRuleCall_9_0());
				}
				lv_locationTimeKind_27_0=ruleLocationKind
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getELocationRule());
					}
					set(
						$current,
						"locationTimeKind",
						lv_locationTimeKind_27_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.LocationKind");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_28='</location>'
		{
			newLeafNode(otherlv_28, grammarAccess.getELocationAccess().getLocationKeyword_10());
		}
	)
;

// Entry rule entryRuleEdge
entryRuleEdge returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEdgeRule()); }
	iv_ruleEdge=ruleEdge
	{ $current=$iv_ruleEdge.current; }
	EOF;

// Rule Edge
ruleEdge returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			('<transition')=>
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getEdgeAccess().getCEdgeParserRuleCall_0());
			}
			this_CEdge_0=ruleCEdge
			{
				$current = $this_CEdge_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getEdgeAccess().getNEdgeParserRuleCall_1());
		}
		this_NEdge_1=ruleNEdge
		{
			$current = $this_NEdge_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNEdge
entryRuleNEdge returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNEdgeRule()); }
	iv_ruleNEdge=ruleNEdge
	{ $current=$iv_ruleNEdge.current; }
	EOF;

// Rule NEdge
ruleNEdge returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='<transition'
			{
				newLeafNode(otherlv_0, grammarAccess.getNEdgeAccess().getTransitionKeyword_0_0());
			}
			(
				otherlv_1='color'
				{
					newLeafNode(otherlv_1, grammarAccess.getNEdgeAccess().getColorKeyword_0_1_0());
				}
				otherlv_2='='
				{
					newLeafNode(otherlv_2, grammarAccess.getNEdgeAccess().getEqualsSignKeyword_0_1_1());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getNEdgeAccess().getColorColorKindEnumRuleCall_0_1_2_0_0());
							}
							lv_color_3_0=ruleColorKind
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getNEdgeRule());
								}
								set(
									$current,
									"color",
									lv_color_3_0,
									"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.ColorKind");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							lv_colorCode_4_0=RULE_STRING
							{
								newLeafNode(lv_colorCode_4_0, grammarAccess.getNEdgeAccess().getColorCodeSTRINGTerminalRuleCall_0_1_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getNEdgeRule());
								}
								setWithLastConsumed(
									$current,
									"colorCode",
									lv_colorCode_4_0,
									"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.STRING");
							}
						)
					)
				)
			)?
			otherlv_5='>'
			{
				newLeafNode(otherlv_5, grammarAccess.getNEdgeAccess().getGreaterThanSignKeyword_0_2());
			}
		)
		(
			otherlv_6='<source'
			{
				newLeafNode(otherlv_6, grammarAccess.getNEdgeAccess().getSourceKeyword_1_0());
			}
			otherlv_7='ref'
			{
				newLeafNode(otherlv_7, grammarAccess.getNEdgeAccess().getRefKeyword_1_1());
			}
			otherlv_8='='
			{
				newLeafNode(otherlv_8, grammarAccess.getNEdgeAccess().getEqualsSignKeyword_1_2());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNEdgeRule());
						}
					}
					otherlv_9=RULE_STRING
					{
						newLeafNode(otherlv_9, grammarAccess.getNEdgeAccess().getSourceLocationCrossReference_1_3_0());
					}
				)
			)
			otherlv_10='/>'
			{
				newLeafNode(otherlv_10, grammarAccess.getNEdgeAccess().getSolidusGreaterThanSignKeyword_1_4());
			}
		)
		(
			otherlv_11='<target'
			{
				newLeafNode(otherlv_11, grammarAccess.getNEdgeAccess().getTargetKeyword_2_0());
			}
			otherlv_12='ref'
			{
				newLeafNode(otherlv_12, grammarAccess.getNEdgeAccess().getRefKeyword_2_1());
			}
			otherlv_13='='
			{
				newLeafNode(otherlv_13, grammarAccess.getNEdgeAccess().getEqualsSignKeyword_2_2());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNEdgeRule());
						}
					}
					otherlv_14=RULE_STRING
					{
						newLeafNode(otherlv_14, grammarAccess.getNEdgeAccess().getTargetLocationCrossReference_2_3_0());
					}
				)
			)
			otherlv_15='/>'
			{
				newLeafNode(otherlv_15, grammarAccess.getNEdgeAccess().getSolidusGreaterThanSignKeyword_2_4());
			}
		)
		(
			otherlv_16='<label'
			{
				newLeafNode(otherlv_16, grammarAccess.getNEdgeAccess().getLabelKeyword_3_0());
			}
			otherlv_17='kind="select"'
			{
				newLeafNode(otherlv_17, grammarAccess.getNEdgeAccess().getKindSelectKeyword_3_1());
			}
			(
				{
					/* */
				}
				{
					newCompositeNode(grammarAccess.getNEdgeAccess().getXmlAttributeParserRuleCall_3_2());
				}
				ruleXmlAttribute
				{
					afterParserOrEnumRuleCall();
				}
			)*
			otherlv_19='>'
			{
				newLeafNode(otherlv_19, grammarAccess.getNEdgeAccess().getGreaterThanSignKeyword_3_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNEdgeAccess().getSelectionSelectionParserRuleCall_3_4_0());
					}
					lv_selection_20_0=ruleSelection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNEdgeRule());
						}
						add(
							$current,
							"selection",
							lv_selection_20_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Selection");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_21=','
				{
					newLeafNode(otherlv_21, grammarAccess.getNEdgeAccess().getCommaKeyword_3_5_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNEdgeAccess().getSelectionSelectionParserRuleCall_3_5_1_0());
						}
						lv_selection_22_0=ruleSelection
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNEdgeRule());
							}
							add(
								$current,
								"selection",
								lv_selection_22_0,
								"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Selection");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_23='</label>'
			{
				newLeafNode(otherlv_23, grammarAccess.getNEdgeAccess().getLabelKeyword_3_6());
			}
		)?
		(
			otherlv_24='<label'
			{
				newLeafNode(otherlv_24, grammarAccess.getNEdgeAccess().getLabelKeyword_4_0());
			}
			otherlv_25='kind="guard"'
			{
				newLeafNode(otherlv_25, grammarAccess.getNEdgeAccess().getKindGuardKeyword_4_1());
			}
			(
				{
					/* */
				}
				{
					newCompositeNode(grammarAccess.getNEdgeAccess().getXmlAttributeParserRuleCall_4_2());
				}
				ruleXmlAttribute
				{
					afterParserOrEnumRuleCall();
				}
			)*
			otherlv_27='>'
			{
				newLeafNode(otherlv_27, grammarAccess.getNEdgeAccess().getGreaterThanSignKeyword_4_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNEdgeAccess().getGuardExpressionParserRuleCall_4_4_0());
					}
					lv_guard_28_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNEdgeRule());
						}
						set(
							$current,
							"guard",
							lv_guard_28_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_29='</label>'
			{
				newLeafNode(otherlv_29, grammarAccess.getNEdgeAccess().getLabelKeyword_4_5());
			}
		)?
		(
			otherlv_30='<label'
			{
				newLeafNode(otherlv_30, grammarAccess.getNEdgeAccess().getLabelKeyword_5_0());
			}
			otherlv_31='kind="synchronisation"'
			{
				newLeafNode(otherlv_31, grammarAccess.getNEdgeAccess().getKindSynchronisationKeyword_5_1());
			}
			(
				{
					/* */
				}
				{
					newCompositeNode(grammarAccess.getNEdgeAccess().getXmlAttributeParserRuleCall_5_2());
				}
				ruleXmlAttribute
				{
					afterParserOrEnumRuleCall();
				}
			)*
			otherlv_33='>'
			{
				newLeafNode(otherlv_33, grammarAccess.getNEdgeAccess().getGreaterThanSignKeyword_5_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNEdgeAccess().getSynchronizationSynchronizationParserRuleCall_5_4_0());
					}
					lv_synchronization_34_0=ruleSynchronization
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNEdgeRule());
						}
						set(
							$current,
							"synchronization",
							lv_synchronization_34_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Synchronization");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_35='</label>'
			{
				newLeafNode(otherlv_35, grammarAccess.getNEdgeAccess().getLabelKeyword_5_5());
			}
		)?
		(
			otherlv_36='<label'
			{
				newLeafNode(otherlv_36, grammarAccess.getNEdgeAccess().getLabelKeyword_6_0());
			}
			otherlv_37='kind="assignment"'
			{
				newLeafNode(otherlv_37, grammarAccess.getNEdgeAccess().getKindAssignmentKeyword_6_1());
			}
			(
				{
					/* */
				}
				{
					newCompositeNode(grammarAccess.getNEdgeAccess().getXmlAttributeParserRuleCall_6_2());
				}
				ruleXmlAttribute
				{
					afterParserOrEnumRuleCall();
				}
			)*
			otherlv_39='>'
			{
				newLeafNode(otherlv_39, grammarAccess.getNEdgeAccess().getGreaterThanSignKeyword_6_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNEdgeAccess().getUpdateExpressionParserRuleCall_6_4_0());
					}
					lv_update_40_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNEdgeRule());
						}
						add(
							$current,
							"update",
							lv_update_40_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_41=','
				{
					newLeafNode(otherlv_41, grammarAccess.getNEdgeAccess().getCommaKeyword_6_5_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNEdgeAccess().getUpdateExpressionParserRuleCall_6_5_1_0());
						}
						lv_update_42_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNEdgeRule());
							}
							add(
								$current,
								"update",
								lv_update_42_0,
								"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_43='</label>'
			{
				newLeafNode(otherlv_43, grammarAccess.getNEdgeAccess().getLabelKeyword_6_6());
			}
		)?
		(
			otherlv_44='<nail'
			{
				newLeafNode(otherlv_44, grammarAccess.getNEdgeAccess().getNailKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNEdgeAccess().getBendPointPointParserRuleCall_7_1_0());
					}
					lv_bendPoint_45_0=rulePoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNEdgeRule());
						}
						add(
							$current,
							"bendPoint",
							lv_bendPoint_45_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Point");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_46='/>'
			{
				newLeafNode(otherlv_46, grammarAccess.getNEdgeAccess().getSolidusGreaterThanSignKeyword_7_2());
			}
		)*
		otherlv_47='</transition>'
		{
			newLeafNode(otherlv_47, grammarAccess.getNEdgeAccess().getTransitionKeyword_8());
		}
	)
;

// Entry rule entryRuleCEdge
entryRuleCEdge returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCEdgeRule()); }
	iv_ruleCEdge=ruleCEdge
	{ $current=$iv_ruleCEdge.current; }
	EOF;

// Rule CEdge
ruleCEdge returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='<transition'
			{
				newLeafNode(otherlv_0, grammarAccess.getCEdgeAccess().getTransitionKeyword_0_0());
			}
			(
				otherlv_1='color'
				{
					newLeafNode(otherlv_1, grammarAccess.getCEdgeAccess().getColorKeyword_0_1_0());
				}
				otherlv_2='='
				{
					newLeafNode(otherlv_2, grammarAccess.getCEdgeAccess().getEqualsSignKeyword_0_1_1());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getCEdgeAccess().getColorColorKindEnumRuleCall_0_1_2_0_0());
							}
							lv_color_3_0=ruleColorKind
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCEdgeRule());
								}
								set(
									$current,
									"color",
									lv_color_3_0,
									"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.ColorKind");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							lv_colorCode_4_0=RULE_STRING
							{
								newLeafNode(lv_colorCode_4_0, grammarAccess.getCEdgeAccess().getColorCodeSTRINGTerminalRuleCall_0_1_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getCEdgeRule());
								}
								setWithLastConsumed(
									$current,
									"colorCode",
									lv_colorCode_4_0,
									"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.STRING");
							}
						)
					)
				)
			)?
			otherlv_5='>'
			{
				newLeafNode(otherlv_5, grammarAccess.getCEdgeAccess().getGreaterThanSignKeyword_0_2());
			}
		)
		(
			otherlv_6='<source'
			{
				newLeafNode(otherlv_6, grammarAccess.getCEdgeAccess().getSourceKeyword_1_0());
			}
			otherlv_7='ref'
			{
				newLeafNode(otherlv_7, grammarAccess.getCEdgeAccess().getRefKeyword_1_1());
			}
			otherlv_8='='
			{
				newLeafNode(otherlv_8, grammarAccess.getCEdgeAccess().getEqualsSignKeyword_1_2());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCEdgeRule());
						}
					}
					otherlv_9=RULE_STRING
					{
						newLeafNode(otherlv_9, grammarAccess.getCEdgeAccess().getSourceLocationCrossReference_1_3_0());
					}
				)
			)
			otherlv_10='/>'
			{
				newLeafNode(otherlv_10, grammarAccess.getCEdgeAccess().getSolidusGreaterThanSignKeyword_1_4());
			}
		)
		(
			otherlv_11='<target'
			{
				newLeafNode(otherlv_11, grammarAccess.getCEdgeAccess().getTargetKeyword_2_0());
			}
			otherlv_12='ref'
			{
				newLeafNode(otherlv_12, grammarAccess.getCEdgeAccess().getRefKeyword_2_1());
			}
			otherlv_13='='
			{
				newLeafNode(otherlv_13, grammarAccess.getCEdgeAccess().getEqualsSignKeyword_2_2());
			}
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCEdgeRule());
						}
					}
					otherlv_14=RULE_STRING
					{
						newLeafNode(otherlv_14, grammarAccess.getCEdgeAccess().getTargetLocationCrossReference_2_3_0());
					}
				)
			)
			otherlv_15='/>'
			{
				newLeafNode(otherlv_15, grammarAccess.getCEdgeAccess().getSolidusGreaterThanSignKeyword_2_4());
			}
		)
		(
			otherlv_16='<label'
			{
				newLeafNode(otherlv_16, grammarAccess.getCEdgeAccess().getLabelKeyword_3_0());
			}
			otherlv_17='kind="select"'
			{
				newLeafNode(otherlv_17, grammarAccess.getCEdgeAccess().getKindSelectKeyword_3_1());
			}
			(
				{
					/* */
				}
				{
					newCompositeNode(grammarAccess.getCEdgeAccess().getXmlAttributeParserRuleCall_3_2());
				}
				ruleXmlAttribute
				{
					afterParserOrEnumRuleCall();
				}
			)*
			otherlv_19='>'
			{
				newLeafNode(otherlv_19, grammarAccess.getCEdgeAccess().getGreaterThanSignKeyword_3_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCEdgeAccess().getSelectionSelectionParserRuleCall_3_4_0());
					}
					lv_selection_20_0=ruleSelection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCEdgeRule());
						}
						add(
							$current,
							"selection",
							lv_selection_20_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Selection");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_21=','
				{
					newLeafNode(otherlv_21, grammarAccess.getCEdgeAccess().getCommaKeyword_3_5_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCEdgeAccess().getSelectionSelectionParserRuleCall_3_5_1_0());
						}
						lv_selection_22_0=ruleSelection
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCEdgeRule());
							}
							add(
								$current,
								"selection",
								lv_selection_22_0,
								"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Selection");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_23='</label>'
			{
				newLeafNode(otherlv_23, grammarAccess.getCEdgeAccess().getLabelKeyword_3_6());
			}
		)?
		(
			otherlv_24='<label'
			{
				newLeafNode(otherlv_24, grammarAccess.getCEdgeAccess().getLabelKeyword_4_0());
			}
			otherlv_25='kind="guard"'
			{
				newLeafNode(otherlv_25, grammarAccess.getCEdgeAccess().getKindGuardKeyword_4_1());
			}
			(
				{
					/* */
				}
				{
					newCompositeNode(grammarAccess.getCEdgeAccess().getXmlAttributeParserRuleCall_4_2());
				}
				ruleXmlAttribute
				{
					afterParserOrEnumRuleCall();
				}
			)*
			otherlv_27='>'
			{
				newLeafNode(otherlv_27, grammarAccess.getCEdgeAccess().getGreaterThanSignKeyword_4_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCEdgeAccess().getGuardExpressionParserRuleCall_4_4_0());
					}
					lv_guard_28_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCEdgeRule());
						}
						set(
							$current,
							"guard",
							lv_guard_28_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_29='</label>'
			{
				newLeafNode(otherlv_29, grammarAccess.getCEdgeAccess().getLabelKeyword_4_5());
			}
		)?
		(
			otherlv_30='<label'
			{
				newLeafNode(otherlv_30, grammarAccess.getCEdgeAccess().getLabelKeyword_5_0());
			}
			otherlv_31='kind="synchronisation"'
			{
				newLeafNode(otherlv_31, grammarAccess.getCEdgeAccess().getKindSynchronisationKeyword_5_1());
			}
			(
				{
					/* */
				}
				{
					newCompositeNode(grammarAccess.getCEdgeAccess().getXmlAttributeParserRuleCall_5_2());
				}
				ruleXmlAttribute
				{
					afterParserOrEnumRuleCall();
				}
			)*
			otherlv_33='>'
			{
				newLeafNode(otherlv_33, grammarAccess.getCEdgeAccess().getGreaterThanSignKeyword_5_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCEdgeAccess().getSynchronizationSynchronizationParserRuleCall_5_4_0());
					}
					lv_synchronization_34_0=ruleSynchronization
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCEdgeRule());
						}
						set(
							$current,
							"synchronization",
							lv_synchronization_34_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Synchronization");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_35='</label>'
			{
				newLeafNode(otherlv_35, grammarAccess.getCEdgeAccess().getLabelKeyword_5_5());
			}
		)?
		(
			otherlv_36='<label'
			{
				newLeafNode(otherlv_36, grammarAccess.getCEdgeAccess().getLabelKeyword_6_0());
			}
			otherlv_37='kind="assignment"'
			{
				newLeafNode(otherlv_37, grammarAccess.getCEdgeAccess().getKindAssignmentKeyword_6_1());
			}
			(
				{
					/* */
				}
				{
					newCompositeNode(grammarAccess.getCEdgeAccess().getXmlAttributeParserRuleCall_6_2());
				}
				ruleXmlAttribute
				{
					afterParserOrEnumRuleCall();
				}
			)*
			otherlv_39='>'
			{
				newLeafNode(otherlv_39, grammarAccess.getCEdgeAccess().getGreaterThanSignKeyword_6_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCEdgeAccess().getUpdateExpressionParserRuleCall_6_4_0());
					}
					lv_update_40_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCEdgeRule());
						}
						add(
							$current,
							"update",
							lv_update_40_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_41=','
				{
					newLeafNode(otherlv_41, grammarAccess.getCEdgeAccess().getCommaKeyword_6_5_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCEdgeAccess().getUpdateExpressionParserRuleCall_6_5_1_0());
						}
						lv_update_42_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCEdgeRule());
							}
							add(
								$current,
								"update",
								lv_update_42_0,
								"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_43='</label>'
			{
				newLeafNode(otherlv_43, grammarAccess.getCEdgeAccess().getLabelKeyword_6_6());
			}
		)?
		(
			otherlv_44='<label'
			{
				newLeafNode(otherlv_44, grammarAccess.getCEdgeAccess().getLabelKeyword_7_0());
			}
			otherlv_45='kind="probability"'
			{
				newLeafNode(otherlv_45, grammarAccess.getCEdgeAccess().getKindProbabilityKeyword_7_1());
			}
			(
				{
					/* */
				}
				{
					newCompositeNode(grammarAccess.getCEdgeAccess().getXmlAttributeParserRuleCall_7_2());
				}
				ruleXmlAttribute
				{
					afterParserOrEnumRuleCall();
				}
			)*
			otherlv_47='>'
			{
				newLeafNode(otherlv_47, grammarAccess.getCEdgeAccess().getGreaterThanSignKeyword_7_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCEdgeAccess().getWeightExpressionParserRuleCall_7_4_0());
					}
					lv_weight_48_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCEdgeRule());
						}
						set(
							$current,
							"weight",
							lv_weight_48_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_49='</label>'
			{
				newLeafNode(otherlv_49, grammarAccess.getCEdgeAccess().getLabelKeyword_7_5());
			}
		)
		(
			otherlv_50='<nail'
			{
				newLeafNode(otherlv_50, grammarAccess.getCEdgeAccess().getNailKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCEdgeAccess().getBendPointPointParserRuleCall_8_1_0());
					}
					lv_bendPoint_51_0=rulePoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCEdgeRule());
						}
						add(
							$current,
							"bendPoint",
							lv_bendPoint_51_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Point");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_52='/>'
			{
				newLeafNode(otherlv_52, grammarAccess.getCEdgeAccess().getSolidusGreaterThanSignKeyword_8_2());
			}
		)*
		otherlv_53='</transition>'
		{
			newLeafNode(otherlv_53, grammarAccess.getCEdgeAccess().getTransitionKeyword_9());
		}
	)
;

// Entry rule entryRuleSynchronization
entryRuleSynchronization returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSynchronizationRule()); }
	iv_ruleSynchronization=ruleSynchronization
	{ $current=$iv_ruleSynchronization.current; }
	EOF;

// Rule Synchronization
ruleSynchronization returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSynchronizationAccess().getChannelExpressionIdentifierExpressionParserRuleCall_0_0());
				}
				lv_channelExpression_0_0=ruleIdentifierExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSynchronizationRule());
					}
					set(
						$current,
						"channelExpression",
						lv_channelExpression_0_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.IdentifierExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSynchronizationAccess().getKindSynchronizationKindEnumRuleCall_1_0());
				}
				lv_kind_1_0=ruleSynchronizationKind
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSynchronizationRule());
					}
					set(
						$current,
						"kind",
						lv_kind_1_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.SynchronizationKind");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSelection
entryRuleSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectionRule()); }
	iv_ruleSelection=ruleSelection
	{ $current=$iv_ruleSelection.current; }
	EOF;

// Rule Selection
ruleSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectionAccess().getVariableVariableParserRuleCall_0_0());
				}
				lv_variable_0_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectionRule());
					}
					add(
						$current,
						"variable",
						lv_variable_0_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getSelectionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectionAccess().getTypeDefinitionTypeDefinitionParserRuleCall_2_0());
				}
				lv_typeDefinition_2_0=ruleTypeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectionRule());
					}
					set(
						$current,
						"typeDefinition",
						lv_typeDefinition_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.TypeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePoint
entryRulePoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointRule()); }
	iv_rulePoint=rulePoint
	{ $current=$iv_rulePoint.current; }
	EOF;

// Rule Point
rulePoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getPointAccess().getPointAction_0(),
					$current);
			}
		)
		this_ID_1=RULE_ID
		{
			newLeafNode(this_ID_1, grammarAccess.getPointAccess().getIDTerminalRuleCall_1());
		}
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getPointAccess().getEqualsSignKeyword_2());
		}
		this_STRING_3=RULE_STRING
		{
			newLeafNode(this_STRING_3, grammarAccess.getPointAccess().getSTRINGTerminalRuleCall_3());
		}
		this_ID_4=RULE_ID
		{
			newLeafNode(this_ID_4, grammarAccess.getPointAccess().getIDTerminalRuleCall_4());
		}
		otherlv_5='='
		{
			newLeafNode(otherlv_5, grammarAccess.getPointAccess().getEqualsSignKeyword_5());
		}
		this_STRING_6=RULE_STRING
		{
			newLeafNode(this_STRING_6, grammarAccess.getPointAccess().getSTRINGTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleDeclaredType
entryRuleDeclaredType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclaredTypeRule()); }
	iv_ruleDeclaredType=ruleDeclaredType
	{ $current=$iv_ruleDeclaredType.current; }
	EOF;

// Rule DeclaredType
ruleDeclaredType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getDeclaredTypeAccess().getDeclaredTypeAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDeclaredTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclaredTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclaredTypeAccess().getIndexIndexParserRuleCall_2_0());
				}
				lv_index_2_0=ruleIndex
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclaredTypeRule());
					}
					add(
						$current,
						"index",
						lv_index_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Index");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleTypeDefinition
entryRuleTypeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDefinitionRule()); }
	iv_ruleTypeDefinition=ruleTypeDefinition
	{ $current=$iv_ruleTypeDefinition.current; }
	EOF;

// Rule TypeDefinition
ruleTypeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeDefinitionAccess().getTypeReferenceParserRuleCall_0());
		}
		this_TypeReference_0=ruleTypeReference
		{
			$current = $this_TypeReference_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeDefinitionAccess().getScalarTypeSpecificationParserRuleCall_1());
		}
		this_ScalarTypeSpecification_1=ruleScalarTypeSpecification
		{
			$current = $this_ScalarTypeSpecification_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeDefinitionAccess().getStructTypeSpecificationParserRuleCall_2());
		}
		this_StructTypeSpecification_2=ruleStructTypeSpecification
		{
			$current = $this_StructTypeSpecification_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeDefinitionAccess().getRangeTypeSpecificationParserRuleCall_3());
		}
		this_RangeTypeSpecification_3=ruleRangeTypeSpecification
		{
			$current = $this_RangeTypeSpecification_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeReference
entryRuleTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeReferenceRule()); }
	iv_ruleTypeReference=ruleTypeReference
	{ $current=$iv_ruleTypeReference.current; }
	EOF;

// Rule TypeReference
ruleTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTypeReferenceRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getTypeReferenceAccess().getReferredTypeTypeCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleScalarTypeSpecification
entryRuleScalarTypeSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScalarTypeSpecificationRule()); }
	iv_ruleScalarTypeSpecification=ruleScalarTypeSpecification
	{ $current=$iv_ruleScalarTypeSpecification.current; }
	EOF;

// Rule ScalarTypeSpecification
ruleScalarTypeSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='scalar'
		{
			newLeafNode(otherlv_0, grammarAccess.getScalarTypeSpecificationAccess().getScalarKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getScalarTypeSpecificationAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScalarTypeSpecificationAccess().getSizeExpressionExpressionParserRuleCall_2_0());
				}
				lv_sizeExpression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScalarTypeSpecificationRule());
					}
					set(
						$current,
						"sizeExpression",
						lv_sizeExpression_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getScalarTypeSpecificationAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleStructTypeSpecification
entryRuleStructTypeSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructTypeSpecificationRule()); }
	iv_ruleStructTypeSpecification=ruleStructTypeSpecification
	{ $current=$iv_ruleStructTypeSpecification.current; }
	EOF;

// Rule StructTypeSpecification
ruleStructTypeSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getStructTypeSpecificationAccess().getStructTypeSpecificationAction_0(),
					$current);
			}
		)
		otherlv_1='struct'
		{
			newLeafNode(otherlv_1, grammarAccess.getStructTypeSpecificationAccess().getStructKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getStructTypeSpecificationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStructTypeSpecificationAccess().getDeclarationDataVariableDeclarationParserRuleCall_3_0_0());
					}
					lv_declaration_3_0=ruleDataVariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStructTypeSpecificationRule());
						}
						add(
							$current,
							"declaration",
							lv_declaration_3_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.DataVariableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getStructTypeSpecificationAccess().getSemicolonKeyword_3_1());
			}
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getStructTypeSpecificationAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleRangeTypeSpecification
entryRuleRangeTypeSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRangeTypeSpecificationRule()); }
	iv_ruleRangeTypeSpecification=ruleRangeTypeSpecification
	{ $current=$iv_ruleRangeTypeSpecification.current; }
	EOF;

// Rule RangeTypeSpecification
ruleRangeTypeSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			newLeafNode(this_ID_0, grammarAccess.getRangeTypeSpecificationAccess().getIDTerminalRuleCall_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getRangeTypeSpecificationAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRangeTypeSpecificationAccess().getBoundsIntegerBoundsParserRuleCall_2_0());
				}
				lv_bounds_2_0=ruleIntegerBounds
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRangeTypeSpecificationRule());
					}
					set(
						$current,
						"bounds",
						lv_bounds_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.IntegerBounds");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getRangeTypeSpecificationAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleIntegerBounds
entryRuleIntegerBounds returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerBoundsRule()); }
	iv_ruleIntegerBounds=ruleIntegerBounds
	{ $current=$iv_ruleIntegerBounds.current; }
	EOF;

// Rule IntegerBounds
ruleIntegerBounds returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIntegerBoundsAccess().getLowerBoundExpressionParserRuleCall_0_0());
				}
				lv_lowerBound_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntegerBoundsRule());
					}
					set(
						$current,
						"lowerBound",
						lv_lowerBound_0_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=','
		{
			newLeafNode(otherlv_1, grammarAccess.getIntegerBoundsAccess().getCommaKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIntegerBoundsAccess().getUpperBoundExpressionParserRuleCall_2_0());
				}
				lv_upperBound_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntegerBoundsRule());
					}
					set(
						$current,
						"upperBound",
						lv_upperBound_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleClockTypeReference
entryRuleClockTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClockTypeReferenceRule()); }
	iv_ruleClockTypeReference=ruleClockTypeReference
	{ $current=$iv_ruleClockTypeReference.current; }
	EOF;

// Rule ClockTypeReference
ruleClockTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getClockTypeReferenceRule());
				}
			}
			otherlv_0=RULE_CLOCK
			{
				newLeafNode(otherlv_0, grammarAccess.getClockTypeReferenceAccess().getReferredTypeTypeCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleChannelTypeReference
entryRuleChannelTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChannelTypeReferenceRule()); }
	iv_ruleChannelTypeReference=ruleChannelTypeReference
	{ $current=$iv_ruleChannelTypeReference.current; }
	EOF;

// Rule ChannelTypeReference
ruleChannelTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getChannelTypeReferenceRule());
				}
			}
			otherlv_0=RULE_CHAN
			{
				newLeafNode(otherlv_0, grammarAccess.getChannelTypeReferenceAccess().getReferredTypeTypeCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleBlock=ruleBlock
	{ $current=$iv_ruleBlock.current; }
	EOF;

// Rule Block
ruleBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockAccess().getDeclarationsLocalNonXmlDeclarationsParserRuleCall_1_0());
				}
				lv_declarations_1_0=ruleLocalNonXmlDeclarations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockRule());
					}
					set(
						$current,
						"declarations",
						lv_declarations_1_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.LocalNonXmlDeclarations");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockAccess().getStatementStatementParserRuleCall_2_0());
				}
				lv_statement_2_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockRule());
					}
					add(
						$current,
						"statement",
						lv_statement_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getBlockParserRuleCall_0());
		}
		this_Block_0=ruleBlock
		{
			$current = $this_Block_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getEmptyStatementParserRuleCall_1());
		}
		this_EmptyStatement_1=ruleEmptyStatement
		{
			$current = $this_EmptyStatement_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getForLoopParserRuleCall_2());
		}
		this_ForLoop_2=ruleForLoop
		{
			$current = $this_ForLoop_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getIterationParserRuleCall_3());
		}
		this_Iteration_3=ruleIteration
		{
			$current = $this_Iteration_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getWhileLoopParserRuleCall_4());
		}
		this_WhileLoop_4=ruleWhileLoop
		{
			$current = $this_WhileLoop_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getDoWhileLoopParserRuleCall_5());
		}
		this_DoWhileLoop_5=ruleDoWhileLoop
		{
			$current = $this_DoWhileLoop_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_6());
		}
		this_IfStatement_6=ruleIfStatement
		{
			$current = $this_IfStatement_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_7());
		}
		this_ReturnStatement_7=ruleReturnStatement
		{
			$current = $this_ReturnStatement_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStatementAccess().getExpressionStatementParserRuleCall_8());
		}
		this_ExpressionStatement_8=ruleExpressionStatement
		{
			$current = $this_ExpressionStatement_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEmptyStatement
entryRuleEmptyStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyStatementRule()); }
	iv_ruleEmptyStatement=ruleEmptyStatement
	{ $current=$iv_ruleEmptyStatement.current; }
	EOF;

// Rule EmptyStatement
ruleEmptyStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getEmptyStatementAccess().getEmptyStatementAction_0(),
					$current);
			}
		)
		otherlv_1=';'
		{
			newLeafNode(otherlv_1, grammarAccess.getEmptyStatementAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleForLoop
entryRuleForLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForLoopRule()); }
	iv_ruleForLoop=ruleForLoop
	{ $current=$iv_ruleForLoop.current; }
	EOF;

// Rule ForLoop
ruleForLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForLoopAccess().getForKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForLoopAccess().getInitializationExpressionParserRuleCall_2_0());
				}
				lv_initialization_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForLoopRule());
					}
					set(
						$current,
						"initialization",
						lv_initialization_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getForLoopAccess().getSemicolonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForLoopAccess().getConditionExpressionParserRuleCall_4_0());
				}
				lv_condition_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForLoopRule());
					}
					set(
						$current,
						"condition",
						lv_condition_4_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getForLoopAccess().getSemicolonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForLoopAccess().getIterationExpressionParserRuleCall_6_0());
				}
				lv_iteration_6_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForLoopRule());
					}
					set(
						$current,
						"iteration",
						lv_iteration_6_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getForLoopAccess().getRightParenthesisKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForLoopAccess().getStatementStatementParserRuleCall_8_0());
				}
				lv_statement_8_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForLoopRule());
					}
					set(
						$current,
						"statement",
						lv_statement_8_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIteration
entryRuleIteration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIterationRule()); }
	iv_ruleIteration=ruleIteration
	{ $current=$iv_ruleIteration.current; }
	EOF;

// Rule Iteration
ruleIteration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getIterationAccess().getForKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIterationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIterationAccess().getVariableVariableParserRuleCall_2_0());
				}
				lv_variable_2_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIterationRule());
					}
					add(
						$current,
						"variable",
						lv_variable_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getIterationAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIterationAccess().getTypeDefinitionTypeDefinitionParserRuleCall_4_0());
				}
				lv_typeDefinition_4_0=ruleTypeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIterationRule());
					}
					set(
						$current,
						"typeDefinition",
						lv_typeDefinition_4_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.TypeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getIterationAccess().getRightParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIterationAccess().getStatementStatementParserRuleCall_6_0());
				}
				lv_statement_6_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIterationRule());
					}
					set(
						$current,
						"statement",
						lv_statement_6_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWhileLoop
entryRuleWhileLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileLoopRule()); }
	iv_ruleWhileLoop=ruleWhileLoop
	{ $current=$iv_ruleWhileLoop.current; }
	EOF;

// Rule WhileLoop
ruleWhileLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='while'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhileLoopAccess().getWhileKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileLoopAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileLoopRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileLoopAccess().getStatementStatementParserRuleCall_4_0());
				}
				lv_statement_4_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileLoopRule());
					}
					set(
						$current,
						"statement",
						lv_statement_4_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDoWhileLoop
entryRuleDoWhileLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDoWhileLoopRule()); }
	iv_ruleDoWhileLoop=ruleDoWhileLoop
	{ $current=$iv_ruleDoWhileLoop.current; }
	EOF;

// Rule DoWhileLoop
ruleDoWhileLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='do'
		{
			newLeafNode(otherlv_0, grammarAccess.getDoWhileLoopAccess().getDoKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDoWhileLoopAccess().getStatementStatementParserRuleCall_1_0());
				}
				lv_statement_1_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoWhileLoopRule());
					}
					set(
						$current,
						"statement",
						lv_statement_1_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='while'
		{
			newLeafNode(otherlv_2, grammarAccess.getDoWhileLoopAccess().getWhileKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getDoWhileLoopAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDoWhileLoopAccess().getExpressionExpressionParserRuleCall_4_0());
				}
				lv_expression_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoWhileLoopRule());
					}
					set(
						$current,
						"expression",
						lv_expression_4_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getDoWhileLoopAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleIfStatement
entryRuleIfStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	iv_ruleIfStatement=ruleIfStatement
	{ $current=$iv_ruleIfStatement.current; }
	EOF;

// Rule IfStatement
ruleIfStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getIfExpressionExpressionParserRuleCall_2_0());
				}
				lv_ifExpression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"ifExpression",
						lv_ifExpression_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getThenStatementStatementParserRuleCall_4_0());
				}
				lv_thenStatement_4_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"thenStatement",
						lv_thenStatement_4_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				('else')=>
				otherlv_5='else'
				{
					newLeafNode(otherlv_5, grammarAccess.getIfStatementAccess().getElseKeyword_5_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStatementAccess().getElseStatementStatementParserRuleCall_5_1_0());
					}
					lv_elseStatement_6_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStatementRule());
						}
						set(
							$current,
							"elseStatement",
							lv_elseStatement_6_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleReturnStatement
entryRuleReturnStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnStatementRule()); }
	iv_ruleReturnStatement=ruleReturnStatement
	{ $current=$iv_ruleReturnStatement.current; }
	EOF;

// Rule ReturnStatement
ruleReturnStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getReturnStatementAccess().getReturnStatementAction_0(),
					$current);
			}
		)
		otherlv_1='return'
		{
			newLeafNode(otherlv_1, grammarAccess.getReturnStatementAccess().getReturnKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnStatementAccess().getReturnExpressionExpressionParserRuleCall_2_0());
				}
				lv_returnExpression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnStatementRule());
					}
					set(
						$current,
						"returnExpression",
						lv_returnExpression_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleExpressionStatement
entryRuleExpressionStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionStatementRule()); }
	iv_ruleExpressionStatement=ruleExpressionStatement
	{ $current=$iv_ruleExpressionStatement.current; }
	EOF;

// Rule ExpressionStatement
ruleExpressionStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0_0());
				}
				lv_expression_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionStatementRule());
					}
					set(
						$current,
						"expression",
						lv_expression_0_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=';'
		{
			newLeafNode(otherlv_1, grammarAccess.getExpressionStatementAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getQuantificationExpressionRParserRuleCall());
	}
	this_QuantificationExpressionR_0=ruleQuantificationExpressionR
	{
		$current = $this_QuantificationExpressionR_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleQuantificationExpressionR
entryRuleQuantificationExpressionR returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuantificationExpressionRRule()); }
	iv_ruleQuantificationExpressionR=ruleQuantificationExpressionR
	{ $current=$iv_ruleQuantificationExpressionR.current; }
	EOF;

// Rule QuantificationExpressionR
ruleQuantificationExpressionR returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getQuantificationExpressionRAccess().getAssignmentExpressionParserRuleCall_0());
		}
		this_AssignmentExpression_0=ruleAssignmentExpression
		{
			$current = $this_AssignmentExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getQuantificationExpressionRAccess().getQuantificationExpressionParserRuleCall_1());
		}
		this_QuantificationExpression_1=ruleQuantificationExpression
		{
			$current = $this_QuantificationExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleQuantificationExpression
entryRuleQuantificationExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuantificationExpressionRule()); }
	iv_ruleQuantificationExpression=ruleQuantificationExpression
	{ $current=$iv_ruleQuantificationExpression.current; }
	EOF;

// Rule QuantificationExpression
ruleQuantificationExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getQuantificationExpressionAccess().getQuantifierQuantifierEnumRuleCall_0_0());
				}
				lv_quantifier_0_0=ruleQuantifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuantificationExpressionRule());
					}
					set(
						$current,
						"quantifier",
						lv_quantifier_0_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Quantifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getQuantificationExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQuantificationExpressionAccess().getVariableVariableParserRuleCall_2_0());
				}
				lv_variable_2_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuantificationExpressionRule());
					}
					add(
						$current,
						"variable",
						lv_variable_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getQuantificationExpressionAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQuantificationExpressionAccess().getTypeDefinitionTypeDefinitionParserRuleCall_4_0());
				}
				lv_typeDefinition_4_0=ruleTypeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuantificationExpressionRule());
					}
					set(
						$current,
						"typeDefinition",
						lv_typeDefinition_4_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.TypeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getQuantificationExpressionAccess().getRightParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQuantificationExpressionAccess().getExpressionExpressionParserRuleCall_6_0());
				}
				lv_expression_6_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuantificationExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_6_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAssignmentExpression
entryRuleAssignmentExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentExpressionRule()); }
	iv_ruleAssignmentExpression=ruleAssignmentExpression
	{ $current=$iv_ruleAssignmentExpression.current; }
	EOF;

// Rule AssignmentExpression
ruleAssignmentExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getConditionExpressionParserRuleCall_0());
		}
		this_ConditionExpression_0=ruleConditionExpression
		{
			$current = $this_ConditionExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAssignmentExpressionAccess().getAssignmentExpressionFirstExprAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getOperatorAssignmentOperatorEnumRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleAssignmentOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.AssignmentOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getSecondExprAssignmentExpressionParserRuleCall_1_2_0());
					}
					lv_secondExpr_3_0=ruleAssignmentExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
						}
						set(
							$current,
							"secondExpr",
							lv_secondExpr_3_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.AssignmentExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleConditionExpression
entryRuleConditionExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionExpressionRule()); }
	iv_ruleConditionExpression=ruleConditionExpression
	{ $current=$iv_ruleConditionExpression.current; }
	EOF;

// Rule ConditionExpression
ruleConditionExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getConditionExpressionAccess().getLogicalOrImpliesExpressionParserRuleCall_0());
		}
		this_LogicalOrImpliesExpression_0=ruleLogicalOrImpliesExpression
		{
			$current = $this_LogicalOrImpliesExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getConditionExpressionAccess().getConditionExpressionIfExpressionAction_1_0(),
						$current);
				}
			)
			otherlv_2='?'
			{
				newLeafNode(otherlv_2, grammarAccess.getConditionExpressionAccess().getQuestionMarkKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionExpressionAccess().getThenExpressionExpressionParserRuleCall_1_2_0());
					}
					lv_thenExpression_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionExpressionRule());
						}
						set(
							$current,
							"thenExpression",
							lv_thenExpression_3_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(':')=>
				otherlv_4=':'
				{
					newLeafNode(otherlv_4, grammarAccess.getConditionExpressionAccess().getColonKeyword_1_3());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionExpressionAccess().getElseExpressionConditionExpressionParserRuleCall_1_4_0());
					}
					lv_elseExpression_5_0=ruleConditionExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionExpressionRule());
						}
						set(
							$current,
							"elseExpression",
							lv_elseExpression_5_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.ConditionExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleLogicalOrImpliesExpression
entryRuleLogicalOrImpliesExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalOrImpliesExpressionRule()); }
	iv_ruleLogicalOrImpliesExpression=ruleLogicalOrImpliesExpression
	{ $current=$iv_ruleLogicalOrImpliesExpression.current; }
	EOF;

// Rule LogicalOrImpliesExpression
ruleLogicalOrImpliesExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLogicalOrImpliesExpressionAccess().getLogicalAndExpressionParserRuleCall_0());
		}
		this_LogicalAndExpression_0=ruleLogicalAndExpression
		{
			$current = $this_LogicalAndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getLogicalOrImpliesExpressionAccess().getLogicalExpressionFirstExprAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalOrImpliesExpressionAccess().getOperatorLogicalOrImpliesOperatorEnumRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleLogicalOrImpliesOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalOrImpliesExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.LogicalOrImpliesOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalOrImpliesExpressionAccess().getSecondExprLogicalAndExpressionParserRuleCall_1_2_0());
					}
					lv_secondExpr_3_0=ruleLogicalAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalOrImpliesExpressionRule());
						}
						set(
							$current,
							"secondExpr",
							lv_secondExpr_3_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.LogicalAndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleLogicalAndExpression
entryRuleLogicalAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicalAndExpressionRule()); }
	iv_ruleLogicalAndExpression=ruleLogicalAndExpression
	{ $current=$iv_ruleLogicalAndExpression.current; }
	EOF;

// Rule LogicalAndExpression
ruleLogicalAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getInclusiveOrExpressionParserRuleCall_0());
		}
		this_InclusiveOrExpression_0=ruleInclusiveOrExpression
		{
			$current = $this_InclusiveOrExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getLogicalAndExpressionAccess().getLogicalExpressionFirstExprAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleLogicalAndOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.LogicalAndOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSecondExprInclusiveOrExpressionParserRuleCall_1_2_0());
					}
					lv_secondExpr_3_0=ruleInclusiveOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
						}
						set(
							$current,
							"secondExpr",
							lv_secondExpr_3_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.InclusiveOrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleInclusiveOrExpression
entryRuleInclusiveOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInclusiveOrExpressionRule()); }
	iv_ruleInclusiveOrExpression=ruleInclusiveOrExpression
	{ $current=$iv_ruleInclusiveOrExpression.current; }
	EOF;

// Rule InclusiveOrExpression
ruleInclusiveOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getInclusiveOrExpressionAccess().getExclusiveOrExpressionParserRuleCall_0());
		}
		this_ExclusiveOrExpression_0=ruleExclusiveOrExpression
		{
			$current = $this_ExclusiveOrExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getInclusiveOrExpressionAccess().getBitwiseExpressionFirstExprAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getInclusiveOrExpressionAccess().getOperatorBitwiseOrOperatorEnumRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleBitwiseOrOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInclusiveOrExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.BitwiseOrOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getInclusiveOrExpressionAccess().getSecondExprExclusiveOrExpressionParserRuleCall_1_2_0());
					}
					lv_secondExpr_3_0=ruleExclusiveOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInclusiveOrExpressionRule());
						}
						set(
							$current,
							"secondExpr",
							lv_secondExpr_3_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.ExclusiveOrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExclusiveOrExpression
entryRuleExclusiveOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExclusiveOrExpressionRule()); }
	iv_ruleExclusiveOrExpression=ruleExclusiveOrExpression
	{ $current=$iv_ruleExclusiveOrExpression.current; }
	EOF;

// Rule ExclusiveOrExpression
ruleExclusiveOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExclusiveOrExpressionAccess().getAndExpressionParserRuleCall_0());
		}
		this_AndExpression_0=ruleAndExpression
		{
			$current = $this_AndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getExclusiveOrExpressionAccess().getBitwiseExpressionFirstExprAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExclusiveOrExpressionAccess().getOperatorBitwiseXorOperatorEnumRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleBitwiseXorOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExclusiveOrExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.BitwiseXorOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExclusiveOrExpressionAccess().getSecondExprAndExpressionParserRuleCall_1_2_0());
					}
					lv_secondExpr_3_0=ruleAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExclusiveOrExpressionRule());
						}
						set(
							$current,
							"secondExpr",
							lv_secondExpr_3_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.AndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	iv_ruleAndExpression=ruleAndExpression
	{ $current=$iv_ruleAndExpression.current; }
	EOF;

// Rule AndExpression
ruleAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
		}
		this_EqualityExpression_0=ruleEqualityExpression
		{
			$current = $this_EqualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndExpressionAccess().getBitwiseExpressionFirstExprAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getOperatorBitwiseAndOperatorEnumRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleBitwiseAndOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.BitwiseAndOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getSecondExprEqualityExpressionParserRuleCall_1_2_0());
					}
					lv_secondExpr_3_0=ruleEqualityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						set(
							$current,
							"secondExpr",
							lv_secondExpr_3_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.EqualityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityExpressionRule()); }
	iv_ruleEqualityExpression=ruleEqualityExpression
	{ $current=$iv_ruleEqualityExpression.current; }
	EOF;

// Rule EqualityExpression
ruleEqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
		}
		this_RelationalExpression_0=ruleRelationalExpression
		{
			$current = $this_RelationalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualityExpressionAccess().getCompareExpressionFirstExprAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOperatorEqualityOperatorEnumRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleEqualityOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.EqualityOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getSecondExprRelationalExpressionParserRuleCall_1_2_0());
					}
					lv_secondExpr_3_0=ruleRelationalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"secondExpr",
							lv_secondExpr_3_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.RelationalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationalExpressionRule()); }
	iv_ruleRelationalExpression=ruleRelationalExpression
	{ $current=$iv_ruleRelationalExpression.current; }
	EOF;

// Rule RelationalExpression
ruleRelationalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getMinMaxExpressionParserRuleCall_0());
		}
		this_MinMaxExpression_0=ruleMinMaxExpression
		{
			$current = $this_MinMaxExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getRelationalExpressionAccess().getCompareExpressionFirstExprAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorEnumRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleRelationalOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.RelationalOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getRelationalExpressionAccess().getSecondExprMinMaxExpressionParserRuleCall_1_2_0());
					}
					lv_secondExpr_3_0=ruleMinMaxExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
						}
						set(
							$current,
							"secondExpr",
							lv_secondExpr_3_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.MinMaxExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMinMaxExpression
entryRuleMinMaxExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMinMaxExpressionRule()); }
	iv_ruleMinMaxExpression=ruleMinMaxExpression
	{ $current=$iv_ruleMinMaxExpression.current; }
	EOF;

// Rule MinMaxExpression
ruleMinMaxExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getMinMaxExpressionAccess().getBitShiftExpressionParserRuleCall_0());
		}
		this_BitShiftExpression_0=ruleBitShiftExpression
		{
			$current = $this_BitShiftExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMinMaxExpressionAccess().getMinMaxExpressionFirstExprAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMinMaxExpressionAccess().getOperatorMinMaxOperatorEnumRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleMinMaxOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMinMaxExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.MinMaxOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMinMaxExpressionAccess().getSecondExprBitShiftExpressionParserRuleCall_1_2_0());
					}
					lv_secondExpr_3_0=ruleBitShiftExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMinMaxExpressionRule());
						}
						set(
							$current,
							"secondExpr",
							lv_secondExpr_3_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.BitShiftExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleBitShiftExpression
entryRuleBitShiftExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBitShiftExpressionRule()); }
	iv_ruleBitShiftExpression=ruleBitShiftExpression
	{ $current=$iv_ruleBitShiftExpression.current; }
	EOF;

// Rule BitShiftExpression
ruleBitShiftExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBitShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0());
		}
		this_AdditiveExpression_0=ruleAdditiveExpression
		{
			$current = $this_AdditiveExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getBitShiftExpressionAccess().getBitShiftExpressionFirstExprAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBitShiftExpressionAccess().getOperatorBitShiftOperatorEnumRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleBitShiftOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBitShiftExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.BitShiftOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBitShiftExpressionAccess().getSecondExprAdditiveExpressionParserRuleCall_1_2_0());
					}
					lv_secondExpr_3_0=ruleAdditiveExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBitShiftExpressionRule());
						}
						set(
							$current,
							"secondExpr",
							lv_secondExpr_3_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.AdditiveExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRatioExpression
entryRuleRatioExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRatioExpressionRule()); }
	iv_ruleRatioExpression=ruleRatioExpression
	{ $current=$iv_ruleRatioExpression.current; }
	EOF;

// Rule RatioExpression
ruleRatioExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRatioExpressionAccess().getFirstExprAdditiveExpressionParserRuleCall_0_0());
				}
				lv_firstExpr_0_0=ruleAdditiveExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRatioExpressionRule());
					}
					set(
						$current,
						"firstExpr",
						lv_firstExpr_0_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.AdditiveExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRatioExpressionAccess().getOperatorRatioOperatorEnumRuleCall_1_0());
				}
				lv_operator_1_0=ruleRatioOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRatioExpressionRule());
					}
					set(
						$current,
						"operator",
						lv_operator_1_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.RatioOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRatioExpressionAccess().getSecondExprAdditiveExpressionParserRuleCall_2_0());
				}
				lv_secondExpr_2_0=ruleAdditiveExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRatioExpressionRule());
					}
					set(
						$current,
						"secondExpr",
						lv_secondExpr_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.AdditiveExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditiveExpressionRule()); }
	iv_ruleAdditiveExpression=ruleAdditiveExpression
	{ $current=$iv_ruleAdditiveExpression.current; }
	EOF;

// Rule AdditiveExpression
ruleAdditiveExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0());
		}
		this_MultiplicativeExpression_0=ruleMultiplicativeExpression
		{
			$current = $this_MultiplicativeExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAdditiveExpressionAccess().getArithmeticExpressionFirstExprAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperatorAdditiveOperatorEnumRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleAdditiveOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.AdditiveOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getSecondExprMultiplicativeExpressionParserRuleCall_1_2_0());
					}
					lv_secondExpr_3_0=ruleMultiplicativeExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
						}
						set(
							$current,
							"secondExpr",
							lv_secondExpr_3_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.MultiplicativeExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); }
	iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression
	{ $current=$iv_ruleMultiplicativeExpression.current; }
	EOF;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionParserRuleCall_0());
		}
		this_UnaryExpression_0=ruleUnaryExpression
		{
			$current = $this_UnaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMultiplicativeExpressionAccess().getArithmeticExpressionFirstExprAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperatorMultiplicativeOperatorEnumRuleCall_1_1_0());
					}
					lv_operator_2_0=ruleMultiplicativeOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
						}
						set(
							$current,
							"operator",
							lv_operator_2_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.MultiplicativeOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getSecondExprUnaryExpressionParserRuleCall_1_2_0());
					}
					lv_secondExpr_3_0=ruleUnaryExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
						}
						set(
							$current,
							"secondExpr",
							lv_secondExpr_3_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.UnaryExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	iv_ruleUnaryExpression=ruleUnaryExpression
	{ $current=$iv_ruleUnaryExpression.current; }
	EOF;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getNegationExpressionParserRuleCall_0());
		}
		this_NegationExpression_0=ruleNegationExpression
		{
			$current = $this_NegationExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPlusExpressionParserRuleCall_1());
		}
		this_PlusExpression_1=rulePlusExpression
		{
			$current = $this_PlusExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getMinusExpressionParserRuleCall_2());
		}
		this_MinusExpression_2=ruleMinusExpression
		{
			$current = $this_MinusExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPostfixExpressionParserRuleCall_3());
		}
		this_PostfixExpression_3=rulePostfixExpression
		{
			$current = $this_PostfixExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPreIncrementDecrementExpressionParserRuleCall_4());
		}
		this_PreIncrementDecrementExpression_4=rulePreIncrementDecrementExpression
		{
			$current = $this_PreIncrementDecrementExpression_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNegationExpression
entryRuleNegationExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNegationExpressionRule()); }
	iv_ruleNegationExpression=ruleNegationExpression
	{ $current=$iv_ruleNegationExpression.current; }
	EOF;

// Rule NegationExpression
ruleNegationExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='!'
			{
				newLeafNode(otherlv_0, grammarAccess.getNegationExpressionAccess().getExclamationMarkKeyword_0_0());
			}
			    |
			otherlv_1='not'
			{
				newLeafNode(otherlv_1, grammarAccess.getNegationExpressionAccess().getNotKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNegationExpressionAccess().getNegatedExpressionUnaryExpressionParserRuleCall_1_0());
				}
				lv_negatedExpression_2_0=ruleUnaryExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNegationExpressionRule());
					}
					set(
						$current,
						"negatedExpression",
						lv_negatedExpression_2_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.UnaryExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePlusExpression
entryRulePlusExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusExpressionRule()); }
	iv_rulePlusExpression=rulePlusExpression
	{ $current=$iv_rulePlusExpression.current; }
	EOF;

// Rule PlusExpression
rulePlusExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='+'
		{
			newLeafNode(otherlv_0, grammarAccess.getPlusExpressionAccess().getPlusSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPlusExpressionAccess().getConfirmedExpressionUnaryExpressionParserRuleCall_1_0());
				}
				lv_confirmedExpression_1_0=ruleUnaryExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPlusExpressionRule());
					}
					set(
						$current,
						"confirmedExpression",
						lv_confirmedExpression_1_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.UnaryExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMinusExpression
entryRuleMinusExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMinusExpressionRule()); }
	iv_ruleMinusExpression=ruleMinusExpression
	{ $current=$iv_ruleMinusExpression.current; }
	EOF;

// Rule MinusExpression
ruleMinusExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='-'
		{
			newLeafNode(otherlv_0, grammarAccess.getMinusExpressionAccess().getHyphenMinusKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMinusExpressionAccess().getInvertedExpressionUnaryExpressionParserRuleCall_1_0());
				}
				lv_invertedExpression_1_0=ruleUnaryExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMinusExpressionRule());
					}
					set(
						$current,
						"invertedExpression",
						lv_invertedExpression_1_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.UnaryExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePostfixExpression
entryRulePostfixExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPostfixExpressionRule()); }
	iv_rulePostfixExpression=rulePostfixExpression
	{ $current=$iv_rulePostfixExpression.current; }
	EOF;

// Rule PostfixExpression
rulePostfixExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPostfixExpressionAccess().getPrimaryExpressionParserRuleCall_0());
		}
		this_PrimaryExpression_0=rulePrimaryExpression
		{
			$current = $this_PrimaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getPostfixExpressionAccess().getScopedIdentifierExpressionScopeAction_1_0_0(),
							$current);
					}
				)
				otherlv_2='.'
				{
					newLeafNode(otherlv_2, grammarAccess.getPostfixExpressionAccess().getFullStopKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPostfixExpressionAccess().getIdentifierIdentifierExpressionParserRuleCall_1_0_2_0());
						}
						lv_identifier_3_0=ruleIdentifierExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
							}
							set(
								$current,
								"identifier",
								lv_identifier_3_0,
								"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.IdentifierExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getPostfixExpressionAccess().getPostIncrementDecrementExpressionExpressionAction_1_1_0(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getPostfixExpressionAccess().getOperatorIncrementDecrementOperatorEnumRuleCall_1_1_1_0());
						}
						lv_operator_5_0=ruleIncrementDecrementOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
							}
							set(
								$current,
								"operator",
								lv_operator_5_0,
								"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.IncrementDecrementOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	iv_rulePrimaryExpression=rulePrimaryExpression
	{ $current=$iv_rulePrimaryExpression.current; }
	EOF;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(ruleFunctionCallExpression)=>
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getFunctionCallExpressionParserRuleCall_0());
			}
			this_FunctionCallExpression_0=ruleFunctionCallExpression
			{
				$current = $this_FunctionCallExpression_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getIdentifierExpressionParserRuleCall_1());
		}
		this_IdentifierExpression_1=ruleIdentifierExpression
		{
			$current = $this_IdentifierExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_2_0());
			}
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_2_1());
			}
			this_Expression_3=ruleExpression
			{
				$current = $this_Expression_3.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_2_2());
			}
		)
		    |
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getLiteralExpressionAction_3_0(),
						$current);
				}
			)
			(
				(
					(
						lv_text_6_1=RULE_STRING
						{
							newLeafNode(lv_text_6_1, grammarAccess.getPrimaryExpressionAccess().getTextSTRINGTerminalRuleCall_3_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPrimaryExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"text",
								lv_text_6_1,
								"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.STRING");
						}
						    |
						lv_text_6_2=RULE_INT_STR
						{
							newLeafNode(lv_text_6_2, grammarAccess.getPrimaryExpressionAccess().getTextINT_STRTerminalRuleCall_3_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPrimaryExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"text",
								lv_text_6_2,
								"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.INT_STR");
						}
						    |
						lv_text_6_3=RULE_DOUBLE_STR
						{
							newLeafNode(lv_text_6_3, grammarAccess.getPrimaryExpressionAccess().getTextDOUBLE_STRTerminalRuleCall_3_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPrimaryExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"text",
								lv_text_6_3,
								"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.DOUBLE_STR");
						}
						    |
						lv_text_6_4='true'
						{
							newLeafNode(lv_text_6_4, grammarAccess.getPrimaryExpressionAccess().getTextTrueKeyword_3_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPrimaryExpressionRule());
							}
							setWithLastConsumed($current, "text", lv_text_6_4, null);
						}
						    |
						lv_text_6_5='false'
						{
							newLeafNode(lv_text_6_5, grammarAccess.getPrimaryExpressionAccess().getTextFalseKeyword_3_1_0_4());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPrimaryExpressionRule());
							}
							setWithLastConsumed($current, "text", lv_text_6_5, null);
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleFunctionCallExpression
entryRuleFunctionCallExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallExpressionRule()); }
	iv_ruleFunctionCallExpression=ruleFunctionCallExpression
	{ $current=$iv_ruleFunctionCallExpression.current; }
	EOF;

// Rule FunctionCallExpression
ruleFunctionCallExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionCallExpressionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getFunctionCallExpressionAccess().getFunctionFunctionCrossReference_0_0());
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionCallExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionCallExpressionAccess().getArgumentExpressionParserRuleCall_2_0_0());
					}
					lv_argument_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionCallExpressionRule());
						}
						add(
							$current,
							"argument",
							lv_argument_2_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getFunctionCallExpressionAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionCallExpressionAccess().getArgumentExpressionParserRuleCall_2_1_1_0());
						}
						lv_argument_4_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionCallExpressionRule());
							}
							add(
								$current,
								"argument",
								lv_argument_4_0,
								"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFunctionCallExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleIdentifierExpression
entryRuleIdentifierExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdentifierExpressionRule()); }
	iv_ruleIdentifierExpression=ruleIdentifierExpression
	{ $current=$iv_ruleIdentifierExpression.current; }
	EOF;

// Rule IdentifierExpression
ruleIdentifierExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIdentifierExpressionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getIdentifierExpressionAccess().getIdentifierNamedElementCrossReference_0_0());
				}
			)
		)
		(
			(
				lv_clockRate_1_0='\''
				{
					newLeafNode(lv_clockRate_1_0, grammarAccess.getIdentifierExpressionAccess().getClockRateApostropheKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIdentifierExpressionRule());
					}
					setWithLastConsumed($current, "clockRate", true, "\'");
				}
			)
		)?
		(
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getIdentifierExpressionAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIdentifierExpressionAccess().getIndexExpressionParserRuleCall_2_1_0());
					}
					lv_index_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIdentifierExpressionRule());
						}
						add(
							$current,
							"index",
							lv_index_3_0,
							"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=']'
				{
					newLeafNode(otherlv_4, grammarAccess.getIdentifierExpressionAccess().getRightSquareBracketKeyword_2_2_0());
				}
				otherlv_5='['
				{
					newLeafNode(otherlv_5, grammarAccess.getIdentifierExpressionAccess().getLeftSquareBracketKeyword_2_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getIdentifierExpressionAccess().getIndexExpressionParserRuleCall_2_2_2_0());
						}
						lv_index_6_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIdentifierExpressionRule());
							}
							add(
								$current,
								"index",
								lv_index_6_0,
								"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getIdentifierExpressionAccess().getRightSquareBracketKeyword_2_3());
			}
		)?
	)
;

// Entry rule entryRulePreIncrementDecrementExpression
entryRulePreIncrementDecrementExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPreIncrementDecrementExpressionRule()); }
	iv_rulePreIncrementDecrementExpression=rulePreIncrementDecrementExpression
	{ $current=$iv_rulePreIncrementDecrementExpression.current; }
	EOF;

// Rule PreIncrementDecrementExpression
rulePreIncrementDecrementExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPreIncrementDecrementExpressionAccess().getOperatorIncrementDecrementOperatorEnumRuleCall_0_0());
				}
				lv_operator_0_0=ruleIncrementDecrementOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPreIncrementDecrementExpressionRule());
					}
					set(
						$current,
						"operator",
						lv_operator_0_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.IncrementDecrementOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPreIncrementDecrementExpressionAccess().getExpressionUnaryExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleUnaryExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPreIncrementDecrementExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"nl.utwente.ewi.fmt.uppaalSMC.parser.UppaalSMC.UnaryExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Rule DataVariablePrefix
ruleDataVariablePrefix returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='const'
			{
				$current = grammarAccess.getDataVariablePrefixAccess().getCONSTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDataVariablePrefixAccess().getCONSTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='meta'
			{
				$current = grammarAccess.getDataVariablePrefixAccess().getMETAEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDataVariablePrefixAccess().getMETAEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule CallByReference
ruleCallByReference returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='CALL_BY_REFERENCE'
		{
			$current = grammarAccess.getCallByReferenceAccess().getCALL_BY_REFERENCEEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getCallByReferenceAccess().getCALL_BY_REFERENCEEnumLiteralDeclaration());
		}
	)
;

// Rule LocationKind
ruleLocationKind returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='<urgent/>'
			{
				$current = grammarAccess.getLocationKindAccess().getURGENTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLocationKindAccess().getURGENTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='<committed/>'
			{
				$current = grammarAccess.getLocationKindAccess().getCOMMITEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLocationKindAccess().getCOMMITEDEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule SynchronizationKind
ruleSynchronizationKind returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='?'
			{
				$current = grammarAccess.getSynchronizationKindAccess().getRECEIVEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSynchronizationKindAccess().getRECEIVEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='!'
			{
				$current = grammarAccess.getSynchronizationKindAccess().getSENDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSynchronizationKindAccess().getSENDEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ColorKind
ruleColorKind returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='DEFAULT'
			{
				$current = grammarAccess.getColorKindAccess().getDEFAULTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getColorKindAccess().getDEFAULTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='WHITE'
			{
				$current = grammarAccess.getColorKindAccess().getWHITEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getColorKindAccess().getWHITEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='LIGHTGREY'
			{
				$current = grammarAccess.getColorKindAccess().getLIGHTGREYEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getColorKindAccess().getLIGHTGREYEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='DARKGREY'
			{
				$current = grammarAccess.getColorKindAccess().getDARKGREYEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getColorKindAccess().getDARKGREYEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='BLACK'
			{
				$current = grammarAccess.getColorKindAccess().getBLACKEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getColorKindAccess().getBLACKEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='BLUE'
			{
				$current = grammarAccess.getColorKindAccess().getBLUEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getColorKindAccess().getBLUEEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='CYAN'
			{
				$current = grammarAccess.getColorKindAccess().getCYANEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getColorKindAccess().getCYANEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='GREEN'
			{
				$current = grammarAccess.getColorKindAccess().getGREENEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getColorKindAccess().getGREENEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='MAGENTA'
			{
				$current = grammarAccess.getColorKindAccess().getMAGENTAEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getColorKindAccess().getMAGENTAEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='ORANGE'
			{
				$current = grammarAccess.getColorKindAccess().getORANGEEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getColorKindAccess().getORANGEEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='PINK'
			{
				$current = grammarAccess.getColorKindAccess().getPINKEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getColorKindAccess().getPINKEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='RED'
			{
				$current = grammarAccess.getColorKindAccess().getREDEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getColorKindAccess().getREDEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='YELLOW'
			{
				$current = grammarAccess.getColorKindAccess().getYELLOWEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getColorKindAccess().getYELLOWEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='SELF_DEFINED'
			{
				$current = grammarAccess.getColorKindAccess().getSELF_DEFINEDEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getColorKindAccess().getSELF_DEFINEDEnumLiteralDeclaration_13());
			}
		)
	)
;

// Rule Quantifier
ruleQuantifier returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='exists'
			{
				$current = grammarAccess.getQuantifierAccess().getEXISTENTIALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getQuantifierAccess().getEXISTENTIALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='forall'
			{
				$current = grammarAccess.getQuantifierAccess().getUNIVERSALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getQuantifierAccess().getUNIVERSALEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule AssignmentOperator
ruleAssignmentOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='='
			{
				$current = grammarAccess.getAssignmentOperatorAccess().getEQUALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAssignmentOperatorAccess().getEQUALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=':='
			{
				$current = grammarAccess.getAssignmentOperatorAccess().getEQUALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAssignmentOperatorAccess().getEQUALEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='+='
			{
				$current = grammarAccess.getAssignmentOperatorAccess().getPLUS_EQUALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAssignmentOperatorAccess().getPLUS_EQUALEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='-='
			{
				$current = grammarAccess.getAssignmentOperatorAccess().getMINUS_EQUALEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getAssignmentOperatorAccess().getMINUS_EQUALEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='*='
			{
				$current = grammarAccess.getAssignmentOperatorAccess().getTIMES_EQUALEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getAssignmentOperatorAccess().getTIMES_EQUALEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='/='
			{
				$current = grammarAccess.getAssignmentOperatorAccess().getDIVIDE_EQUALEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getAssignmentOperatorAccess().getDIVIDE_EQUALEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='%='
			{
				$current = grammarAccess.getAssignmentOperatorAccess().getMODULO_EQUALEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getAssignmentOperatorAccess().getMODULO_EQUALEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='&amp;='
			{
				$current = grammarAccess.getAssignmentOperatorAccess().getBIT_AND_EQUALEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getAssignmentOperatorAccess().getBIT_AND_EQUALEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='|='
			{
				$current = grammarAccess.getAssignmentOperatorAccess().getBIT_OR_EQUALEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getAssignmentOperatorAccess().getBIT_OR_EQUALEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='&lt;&lt;='
			{
				$current = grammarAccess.getAssignmentOperatorAccess().getBIT_LEFT_EQUALEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getAssignmentOperatorAccess().getBIT_LEFT_EQUALEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='&gt;&gt;='
			{
				$current = grammarAccess.getAssignmentOperatorAccess().getBIT_RIGHT_EQUALEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getAssignmentOperatorAccess().getBIT_RIGHT_EQUALEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='^='
			{
				$current = grammarAccess.getAssignmentOperatorAccess().getBIT_XOR_EQUALEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getAssignmentOperatorAccess().getBIT_XOR_EQUALEnumLiteralDeclaration_11());
			}
		)
	)
;

// Rule LogicalOrImpliesOperator
ruleLogicalOrImpliesOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='or'
			{
				$current = grammarAccess.getLogicalOrImpliesOperatorAccess().getOREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLogicalOrImpliesOperatorAccess().getOREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='||'
			{
				$current = grammarAccess.getLogicalOrImpliesOperatorAccess().getOREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLogicalOrImpliesOperatorAccess().getOREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='imply'
			{
				$current = grammarAccess.getLogicalOrImpliesOperatorAccess().getIMPLYEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getLogicalOrImpliesOperatorAccess().getIMPLYEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule LogicalAndOperator
ruleLogicalAndOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='and'
			{
				$current = grammarAccess.getLogicalAndOperatorAccess().getANDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLogicalAndOperatorAccess().getANDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='&amp;&amp;'
			{
				$current = grammarAccess.getLogicalAndOperatorAccess().getANDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLogicalAndOperatorAccess().getANDEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule BitwiseOrOperator
ruleBitwiseOrOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='|'
		{
			$current = grammarAccess.getBitwiseOrOperatorAccess().getOREnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseOrOperatorAccess().getOREnumLiteralDeclaration());
		}
	)
;

// Rule BitwiseXorOperator
ruleBitwiseXorOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='^'
		{
			$current = grammarAccess.getBitwiseXorOperatorAccess().getXOREnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseXorOperatorAccess().getXOREnumLiteralDeclaration());
		}
	)
;

// Rule BitwiseAndOperator
ruleBitwiseAndOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='&amp;'
		{
			$current = grammarAccess.getBitwiseAndOperatorAccess().getANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseAndOperatorAccess().getANDEnumLiteralDeclaration());
		}
	)
;

// Rule EqualityOperator
ruleEqualityOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='=='
			{
				$current = grammarAccess.getEqualityOperatorAccess().getEQUALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEqualityOperatorAccess().getEQUALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='!='
			{
				$current = grammarAccess.getEqualityOperatorAccess().getUNEQUALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEqualityOperatorAccess().getUNEQUALEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule RelationalOperator
ruleRelationalOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='&gt;'
			{
				$current = grammarAccess.getRelationalOperatorAccess().getGREATEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRelationalOperatorAccess().getGREATEREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='&gt;='
			{
				$current = grammarAccess.getRelationalOperatorAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRelationalOperatorAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='&lt;'
			{
				$current = grammarAccess.getRelationalOperatorAccess().getLESSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRelationalOperatorAccess().getLESSEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='&lt;='
			{
				$current = grammarAccess.getRelationalOperatorAccess().getLESS_OR_EQUALEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getRelationalOperatorAccess().getLESS_OR_EQUALEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule MinMaxOperator
ruleMinMaxOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='&lt;?'
			{
				$current = grammarAccess.getMinMaxOperatorAccess().getMINEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMinMaxOperatorAccess().getMINEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='&gt;?'
			{
				$current = grammarAccess.getMinMaxOperatorAccess().getMAXEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMinMaxOperatorAccess().getMAXEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule BitShiftOperator
ruleBitShiftOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='&lt;&lt;'
			{
				$current = grammarAccess.getBitShiftOperatorAccess().getLEFTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBitShiftOperatorAccess().getLEFTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='&gt;&gt;'
			{
				$current = grammarAccess.getBitShiftOperatorAccess().getRIGHTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBitShiftOperatorAccess().getRIGHTEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule RatioOperator
ruleRatioOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0=':'
		{
			$current = grammarAccess.getRatioOperatorAccess().getDIVIDEEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getRatioOperatorAccess().getDIVIDEEnumLiteralDeclaration());
		}
	)
;

// Rule AdditiveOperator
ruleAdditiveOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='+'
			{
				$current = grammarAccess.getAdditiveOperatorAccess().getADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAdditiveOperatorAccess().getADDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='-'
			{
				$current = grammarAccess.getAdditiveOperatorAccess().getSUBTRACTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAdditiveOperatorAccess().getSUBTRACTEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule MultiplicativeOperator
ruleMultiplicativeOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='*'
			{
				$current = grammarAccess.getMultiplicativeOperatorAccess().getMULTIPLICATEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMultiplicativeOperatorAccess().getMULTIPLICATEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='/'
			{
				$current = grammarAccess.getMultiplicativeOperatorAccess().getDIVIDEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMultiplicativeOperatorAccess().getDIVIDEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='%'
			{
				$current = grammarAccess.getMultiplicativeOperatorAccess().getMODULOEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getMultiplicativeOperatorAccess().getMODULOEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule IncrementDecrementOperator
ruleIncrementDecrementOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='++'
			{
				$current = grammarAccess.getIncrementDecrementOperatorAccess().getINCREMENTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getIncrementDecrementOperatorAccess().getINCREMENTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='--'
			{
				$current = grammarAccess.getIncrementDecrementOperatorAccess().getDECREMENTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getIncrementDecrementOperatorAccess().getDECREMENTEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_QUERIES : '<queries>' ( options {greedy=false;} : . )*'</queries>';

RULE_INT_STR : ('0'..'9')+;

RULE_DOUBLE_STR : RULE_INT_STR '.' RULE_INT_STR;

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_CLOCK : 'clock';

RULE_CHAN : 'chan';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
